
state 0
	$accept: .file $end 
	$$4: .    (4)

	.  reduce 4 (src line 211)

	file  goto 1
	loadsys  goto 2
	$$4  goto 3

state 1
	$accept:  file.$end 

	$end  accept
	.  error


state 2
	file:  loadsys.package imports xdcl_list 
	package: .    (2)

	LPACKAGE  shift 5
	.  reduce 2 (src line 194)

	package  goto 4

state 3
	loadsys:  $$4.import_package import_there 

	LPACKAGE  shift 7
	.  error

	import_package  goto 6

state 4
	file:  loadsys package.imports xdcl_list 
	imports: .    (6)

	.  reduce 6 (src line 228)

	imports  goto 8

state 5
	package:  LPACKAGE.sym ';' 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 9
	hidden_importsym  goto 11

state 6
	loadsys:  $$4 import_package.import_there 
	$$21: .    (21)

	.  reduce 21 (src line 335)

	import_there  goto 14
	$$21  goto 15

state 7
	import_package:  LPACKAGE.LNAME import_safety ';' 

	LNAME  shift 16
	.  error


state 8
	file:  loadsys package imports.xdcl_list 
	imports:  imports.import ';' 
	xdcl_list: .    (230)

	LIMPORT  shift 19
	.  reduce 230 (src line 1660)

	xdcl_list  goto 17
	import  goto 18

state 9
	package:  LPACKAGE sym.';' 

	';'  shift 20
	.  error


state 10
	sym:  LNAME.    (163)

	.  reduce 163 (src line 1229)


state 11
	sym:  hidden_importsym.    (164)

	.  reduce 164 (src line 1238)


state 12
	sym:  '?'.    (165)

	.  reduce 165 (src line 1239)


state 13
	hidden_importsym:  '@'.LLITERAL '.' LNAME 
	hidden_importsym:  '@'.LLITERAL '.' '?' 

	LLITERAL  shift 21
	.  error


state 14
	loadsys:  $$4 import_package import_there.    (5)

	.  reduce 5 (src line 222)


state 15
	import_there:  $$21.hidden_import_list '$' '$' 
	hidden_import_list: .    (357)

	.  reduce 357 (src line 2363)

	hidden_import_list  goto 22

state 16
	import_package:  LPACKAGE LNAME.import_safety ';' 
	import_safety: .    (19)

	LNAME  shift 24
	.  reduce 19 (src line 327)

	import_safety  goto 23

state 17
	file:  loadsys package imports xdcl_list.    (1)
	xdcl_list:  xdcl_list.xdcl ';' 
	xdcl: .    (23)

	$end  reduce 1 (src line 185)
	error  shift 29
	LLITERAL  shift 70
	LBREAK  shift 42
	LCHAN  shift 80
	LCONST  shift 48
	LCONTINUE  shift 43
	LDEFER  shift 45
	LFALL  shift 41
	LFOR  shift 51
	LFUNC  shift 33
	LGO  shift 44
	LGOTO  shift 46
	LIF  shift 55
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LRETURN  shift 47
	LSELECT  shift 53
	LSTRUCT  shift 84
	LSWITCH  shift 52
	LTYPE  shift 32
	LVAR  shift 30
	LDOSELECT  shift 54
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	';'  reduce 23 (src line 348)
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 58
	expr  goto 49
	fnliteral  goto 75
	for_stmt  goto 35
	if_stmt  goto 39
	non_dcl_stmt  goto 28
	labelname  goto 40
	name  goto 71
	new_name  goto 56
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	select_stmt  goto 37
	doselect_stmt  goto 38
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 57
	xfndcl  goto 27
	xdcl  goto 25
	expr_list  goto 50
	common_dcl  goto 26
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 78

state 18
	imports:  imports import.';' 

	';'  shift 86
	.  error


state 19
	import:  LIMPORT.import_stmt 
	import:  LIMPORT.'(' import_stmt_list osemi ')' 
	import:  LIMPORT.'(' ')' 

	LLITERAL  shift 90
	LNAME  shift 10
	'('  shift 88
	'.'  shift 92
	'?'  shift 12
	'@'  shift 13
	.  error

	import_here  goto 89
	sym  goto 91
	hidden_importsym  goto 11
	import_stmt  goto 87

state 20
	package:  LPACKAGE sym ';'.    (3)

	.  reduce 3 (src line 201)


state 21
	hidden_importsym:  '@' LLITERAL.'.' LNAME 
	hidden_importsym:  '@' LLITERAL.'.' '?' 

	'.'  shift 93
	.  error


state 22
	import_there:  $$21 hidden_import_list.'$' '$' 
	hidden_import_list:  hidden_import_list.hidden_import 

	LCONST  shift 98
	LFUNC  shift 100
	LIMPORT  shift 96
	LTYPE  shift 99
	LVAR  shift 97
	'$'  shift 94
	.  error

	hidden_import  goto 95

state 23
	import_package:  LPACKAGE LNAME import_safety.';' 

	';'  shift 101
	.  error


state 24
	import_safety:  LNAME.    (20)

	.  reduce 20 (src line 328)


state 25
	xdcl_list:  xdcl_list xdcl.';' 

	';'  shift 102
	.  error


state 26
	xdcl:  common_dcl.    (24)

	.  reduce 24 (src line 353)


state 27
	xdcl:  xfndcl.    (25)

	.  reduce 25 (src line 354)


state 28
	xdcl:  non_dcl_stmt.    (26)

	.  reduce 26 (src line 358)


state 29
	xdcl:  error.    (27)

	.  reduce 27 (src line 363)


state 30
	common_dcl:  LVAR.vardcl 
	common_dcl:  LVAR.'(' vardcl_list osemi ')' 
	common_dcl:  LVAR.'(' ')' 

	LNAME  shift 10
	'('  shift 104
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 107
	dcl_name  goto 106
	dcl_name_list  goto 105
	vardcl  goto 103
	hidden_importsym  goto 11

state 31
	common_dcl:  lconst.constdcl 
	common_dcl:  lconst.'(' constdcl osemi ')' 
	common_dcl:  lconst.'(' constdcl ';' constdcl_list osemi ')' 
	common_dcl:  lconst.'(' ')' 

	LNAME  shift 10
	'('  shift 109
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 107
	dcl_name  goto 106
	dcl_name_list  goto 110
	constdcl  goto 108
	hidden_importsym  goto 11

state 32
	common_dcl:  LTYPE.typedcl 
	common_dcl:  LTYPE.'(' typedcl_list osemi ')' 
	common_dcl:  LTYPE.'(' ')' 

	LNAME  shift 10
	'('  shift 112
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 114
	typedclname  goto 113
	typedcl  goto 111
	hidden_importsym  goto 11

state 33
	xfndcl:  LFUNC.fndcl fnbody 
	fntype:  LFUNC.'(' oarg_type_list_ocomma ')' fnres 

	LNAME  shift 10
	'('  shift 116
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 117
	fndcl  goto 115
	hidden_importsym  goto 11

state 34
	non_dcl_stmt:  simple_stmt.    (268)

	.  reduce 268 (src line 1887)


state 35
	non_dcl_stmt:  for_stmt.    (269)

	.  reduce 269 (src line 1889)


state 36
	non_dcl_stmt:  switch_stmt.    (270)

	.  reduce 270 (src line 1890)


state 37
	non_dcl_stmt:  select_stmt.    (271)

	.  reduce 271 (src line 1891)


state 38
	non_dcl_stmt:  doselect_stmt.    (272)

	.  reduce 272 (src line 1892)


state 39
	non_dcl_stmt:  if_stmt.    (273)

	.  reduce 273 (src line 1893)


state 40
	non_dcl_stmt:  labelname.':' $$274 stmt 

	':'  shift 118
	.  error


state 41
	non_dcl_stmt:  LFALL.    (276)

	.  reduce 276 (src line 1910)


state 42
	non_dcl_stmt:  LBREAK.onew_name 
	onew_name: .    (161)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 161 (src line 1223)

	sym  goto 121
	new_name  goto 120
	onew_name  goto 119
	hidden_importsym  goto 11

state 43
	non_dcl_stmt:  LCONTINUE.onew_name 
	onew_name: .    (161)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 161 (src line 1223)

	sym  goto 121
	new_name  goto 120
	onew_name  goto 122
	hidden_importsym  goto 11

state 44
	non_dcl_stmt:  LGO.pseudocall 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	'('  shift 69
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 124
	pexpr_no_paren  goto 68
	pseudocall  goto 123
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 45
	non_dcl_stmt:  LDEFER.pseudocall 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	'('  shift 69
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 124
	pexpr_no_paren  goto 68
	pseudocall  goto 127
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 46
	non_dcl_stmt:  LGOTO.new_name 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 121
	new_name  goto 128
	hidden_importsym  goto 11

state 47
	non_dcl_stmt:  LRETURN.oexpr_list 
	oexpr_list: .    (305)

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 305 (src line 2059)

	sym  goto 125
	expr  goto 131
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	expr_list  goto 130
	oexpr_list  goto 129
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 48
	lconst:  LCONST.    (38)

	.  reduce 38 (src line 417)


state 49
	simple_stmt:  expr.    (50)
	simple_stmt:  expr.LASOP expr 
	simple_stmt:  expr.LINC 
	simple_stmt:  expr.LDEC 
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	expr_list:  expr.    (289)

	LASOP  shift 132
	LCOLAS  reduce 289 (src line 1994)
	LANDAND  shift 136
	LANDNOT  shift 151
	LCOMM  shift 154
	LDEC  shift 134
	LEQ  shift 137
	LGE  shift 141
	LGT  shift 142
	LINC  shift 133
	LLE  shift 140
	LLSH  shift 152
	LLT  shift 139
	LNE  shift 138
	LOROR  shift 135
	LRSH  shift 153
	'+'  shift 143
	'-'  shift 144
	'|'  shift 145
	'^'  shift 146
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	'='  reduce 289 (src line 1994)
	','  reduce 289 (src line 1994)
	.  reduce 50 (src line 478)


state 50
	simple_stmt:  expr_list.'=' expr_list 
	simple_stmt:  expr_list.LCOLAS expr_list 
	expr_list:  expr_list.',' expr 

	LCOLAS  shift 156
	'='  shift 155
	','  shift 157
	.  error


state 51
	for_stmt:  LFOR.$$75 for_body 
	$$75: .    (75)

	.  reduce 75 (src line 727)

	$$75  goto 158

state 52
	switch_stmt:  LSWITCH.$$89 if_header $$90 LBODY caseblock_list '}' 
	$$89: .    (89)

	.  reduce 89 (src line 822)

	$$89  goto 159

state 53
	select_stmt:  LSELECT.$$92 LBODY caseblock_list '}' 
	$$92: .    (92)

	.  reduce 92 (src line 845)

	$$92  goto 160

state 54
	doselect_stmt:  LDOSELECT.$$96 doselect_hdr $$97 LBODY caseblock_list '}' 
	$$96: .    (96)

	.  reduce 96 (src line 881)

	$$96  goto 161

state 55
	if_stmt:  LIF.$$79 if_header $$80 loop_body $$81 elseif_list else 
	$$79: .    (79)

	.  reduce 79 (src line 756)

	$$79  goto 162

state 56
	labelname:  new_name.    (169)

	.  reduce 169 (src line 1283)


state 57
	expr:  uexpr.    (99)

	.  reduce 99 (src line 909)


state 58
	new_name:  sym.    (159)
	name:  sym.    (168)

	':'  reduce 159 (src line 1207)
	.  reduce 168 (src line 1274)


state 59
	uexpr:  pexpr.    (120)
	pseudocall:  pexpr.'(' ')' 
	pseudocall:  pexpr.'(' expr_or_type_list ocomma ')' 
	pseudocall:  pexpr.'(' expr_or_type_list LDDD ocomma ')' 
	pexpr_no_paren:  pexpr.'.' sym 
	pexpr_no_paren:  pexpr.'.' '(' expr_or_type ')' 
	pexpr_no_paren:  pexpr.'.' '(' LTYPE ')' 
	pexpr_no_paren:  pexpr.'[' expr ']' 
	pexpr_no_paren:  pexpr.'[' oexpr ':' oexpr ']' 
	pexpr_no_paren:  pexpr.'[' oexpr ':' oexpr ':' oexpr ']' 

	'('  shift 163
	'.'  shift 164
	'['  shift 165
	.  reduce 120 (src line 993)


state 60
	uexpr:  '*'.uexpr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 166
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 61
	uexpr:  '&'.uexpr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 167
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 62
	uexpr:  '+'.uexpr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 168
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 63
	uexpr:  '-'.uexpr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 169
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 64
	uexpr:  '!'.uexpr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 170
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 65
	uexpr:  '~'.uexpr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 171
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 66
	uexpr:  '^'.uexpr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 172
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 67
	uexpr:  LCOMM.uexpr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 173
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 68
	pexpr_no_paren:  pexpr_no_paren.'{' start_complit braced_keyval_list '}' 
	pexpr:  pexpr_no_paren.    (152)

	'{'  shift 174
	.  reduce 152 (src line 1170)


state 69
	pexpr_no_paren:  '('.expr_or_type ')' '{' start_complit braced_keyval_list '}' 
	pexpr:  '('.expr_or_type ')' 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 182
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 181
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 176
	expr_or_type  goto 175
	fnliteral  goto 75
	name  goto 71
	non_expr_type  goto 177
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	recvchantype  goto 178
	othertype  goto 180
	fntype  goto 179
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 70
	pexpr_no_paren:  LLITERAL.    (132)

	.  reduce 132 (src line 1057)


state 71
	pexpr_no_paren:  name.    (133)

	.  reduce 133 (src line 1062)


state 72
	pexpr_no_paren:  pseudocall.    (140)

	.  reduce 140 (src line 1100)


state 73
	pexpr_no_paren:  convtype.'(' expr ocomma ')' 

	'('  shift 183
	.  error


state 74
	pexpr_no_paren:  comptype.lbrace start_complit braced_keyval_list '}' 

	LBODY  shift 185
	'{'  shift 186
	.  error

	lbrace  goto 184

state 75
	pexpr_no_paren:  fnliteral.    (145)

	.  reduce 145 (src line 1127)


state 76
	convtype:  fntype.    (187)
	fnlitdcl:  fntype.    (227)

	'('  reduce 187 (src line 1336)
	.  reduce 227 (src line 1637)


state 77
	convtype:  othertype.    (188)
	comptype:  othertype.    (189)

	'('  reduce 188 (src line 1338)
	.  reduce 189 (src line 1340)


state 78
	fnliteral:  fnlitdcl.lbrace stmt_list '}' 
	fnliteral:  fnlitdcl.error 

	error  shift 188
	LBODY  shift 185
	'{'  shift 186
	.  error

	lbrace  goto 187

state 79
	othertype:  '['.oexpr ']' ntype 
	othertype:  '['.LDDD ']' ntype 
	oexpr: .    (303)

	LLITERAL  shift 70
	LCHAN  shift 80
	LDDD  shift 190
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 303 (src line 2053)

	sym  goto 125
	expr  goto 191
	fnliteral  goto 75
	name  goto 71
	oexpr  goto 189
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 80
	othertype:  LCHAN.non_recvchantype 
	othertype:  LCHAN.LCOMM ntype 
	othertype:  LCHAN.implinterfacetype 
	othertype:  LCHAN.LCOMM implinterfacetype 

	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LBODY  shift 185
	LCOMM  shift 193
	'*'  shift 201
	'('  shift 199
	'{'  shift 186
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	lbrace  goto 200
	sym  goto 125
	dotname  goto 198
	name  goto 202
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 197
	implinterfacetype  goto 194
	non_recvchantype  goto 192
	othertype  goto 196
	fntype  goto 195
	hidden_importsym  goto 11

state 81
	othertype:  LMAP.'[' ntype ']' ntype 

	'['  shift 203
	.  error


state 82
	othertype:  structtype.    (204)

	.  reduce 204 (src line 1398)


state 83
	othertype:  interfacetype.    (205)

	.  reduce 205 (src line 1399)


state 84
	structtype:  LSTRUCT.lbrace structdcl_list osemi '}' 
	structtype:  LSTRUCT.lbrace '}' 

	LBODY  shift 185
	'{'  shift 186
	.  error

	lbrace  goto 204

state 85
	interfacetype:  LINTERFACE.lbrace interfacedcl_list osemi '}' 
	interfacetype:  LINTERFACE.lbrace '}' 

	LBODY  shift 185
	'{'  shift 186
	.  error

	lbrace  goto 205

state 86
	imports:  imports import ';'.    (7)

	.  reduce 7 (src line 229)


state 87
	import:  LIMPORT import_stmt.    (8)

	.  reduce 8 (src line 231)


state 88
	import:  LIMPORT '('.import_stmt_list osemi ')' 
	import:  LIMPORT '('.')' 

	LLITERAL  shift 90
	LNAME  shift 10
	')'  shift 207
	'.'  shift 92
	'?'  shift 12
	'@'  shift 13
	.  error

	import_here  goto 89
	sym  goto 91
	hidden_importsym  goto 11
	import_stmt  goto 208
	import_stmt_list  goto 206

state 89
	import_stmt:  import_here.import_package import_there 
	import_stmt:  import_here.import_there 
	$$21: .    (21)

	LPACKAGE  shift 7
	.  reduce 21 (src line 335)

	import_package  goto 209
	import_there  goto 210
	$$21  goto 15

state 90
	import_here:  LLITERAL.    (15)

	.  reduce 15 (src line 287)


state 91
	import_here:  sym.LLITERAL 

	LLITERAL  shift 211
	.  error


state 92
	import_here:  '.'.LLITERAL 

	LLITERAL  shift 212
	.  error


state 93
	hidden_importsym:  '@' LLITERAL '.'.LNAME 
	hidden_importsym:  '@' LLITERAL '.'.'?' 

	LNAME  shift 213
	'?'  shift 214
	.  error


state 94
	import_there:  $$21 hidden_import_list '$'.'$' 

	'$'  shift 215
	.  error


state 95
	hidden_import_list:  hidden_import_list hidden_import.    (358)

	.  reduce 358 (src line 2364)


state 96
	hidden_import:  LIMPORT.LNAME LLITERAL ';' 

	LNAME  shift 216
	.  error


state 97
	hidden_import:  LVAR.hidden_pkg_importsym hidden_type ';' 

	'@'  shift 13
	.  error

	hidden_importsym  goto 218
	hidden_pkg_importsym  goto 217

state 98
	hidden_import:  LCONST.hidden_pkg_importsym '=' hidden_constant ';' 
	hidden_import:  LCONST.hidden_pkg_importsym hidden_type '=' hidden_constant ';' 

	'@'  shift 13
	.  error

	hidden_importsym  goto 218
	hidden_pkg_importsym  goto 219

state 99
	hidden_import:  LTYPE.hidden_pkgtype hidden_type ';' 

	'@'  shift 13
	.  error

	hidden_importsym  goto 218
	hidden_pkg_importsym  goto 221
	hidden_pkgtype  goto 220

state 100
	hidden_import:  LFUNC.hidden_fndcl fnbody ';' 

	'('  shift 224
	'@'  shift 13
	.  error

	hidden_fndcl  goto 222
	hidden_importsym  goto 218
	hidden_pkg_importsym  goto 223

state 101
	import_package:  LPACKAGE LNAME import_safety ';'.    (18)

	.  reduce 18 (src line 310)


state 102
	xdcl_list:  xdcl_list xdcl ';'.    (231)

	.  reduce 231 (src line 1664)


state 103
	common_dcl:  LVAR vardcl.    (28)

	.  reduce 28 (src line 368)


state 104
	common_dcl:  LVAR '('.vardcl_list osemi ')' 
	common_dcl:  LVAR '('.')' 

	LNAME  shift 10
	')'  shift 226
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 107
	dcl_name  goto 106
	dcl_name_list  goto 105
	vardcl  goto 227
	vardcl_list  goto 225
	hidden_importsym  goto 11

state 105
	vardcl:  dcl_name_list.ntype 
	vardcl:  dcl_name_list.ntype '=' expr_list 
	vardcl:  dcl_name_list.'=' expr_list 
	dcl_name_list:  dcl_name_list.',' dcl_name 

	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'='  shift 229
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	','  shift 230
	.  error

	sym  goto 125
	ntype  goto 228
	dotname  goto 235
	name  goto 202
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 106
	dcl_name_list:  dcl_name.    (287)

	.  reduce 287 (src line 1984)


state 107
	dcl_name:  sym.    (160)

	.  reduce 160 (src line 1217)


state 108
	common_dcl:  lconst constdcl.    (31)

	.  reduce 31 (src line 381)


state 109
	common_dcl:  lconst '('.constdcl osemi ')' 
	common_dcl:  lconst '('.constdcl ';' constdcl_list osemi ')' 
	common_dcl:  lconst '('.')' 

	LNAME  shift 10
	')'  shift 239
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 107
	dcl_name  goto 106
	dcl_name_list  goto 110
	constdcl  goto 238
	hidden_importsym  goto 11

state 110
	constdcl:  dcl_name_list.ntype '=' expr_list 
	constdcl:  dcl_name_list.'=' expr_list 
	dcl_name_list:  dcl_name_list.',' dcl_name 

	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'='  shift 241
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	','  shift 230
	.  error

	sym  goto 125
	ntype  goto 240
	dotname  goto 235
	name  goto 202
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 111
	common_dcl:  LTYPE typedcl.    (35)

	.  reduce 35 (src line 404)


state 112
	common_dcl:  LTYPE '('.typedcl_list osemi ')' 
	common_dcl:  LTYPE '('.')' 

	LNAME  shift 10
	')'  shift 243
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 114
	typedclname  goto 113
	typedcl  goto 244
	typedcl_list  goto 242
	hidden_importsym  goto 11

state 113
	typedcl:  typedclname.ntype 
	typedcl:  typedclname.implstructtype 

	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LBODY  shift 185
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'{'  shift 186
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	lbrace  goto 247
	sym  goto 125
	ntype  goto 245
	dotname  goto 235
	name  goto 202
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	implstructtype  goto 246
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 114
	typedclname:  sym.    (47)

	.  reduce 47 (src line 458)


state 115
	xfndcl:  LFUNC fndcl.fnbody 
	fnbody: .    (222)

	'{'  shift 249
	.  reduce 222 (src line 1610)

	fnbody  goto 248

state 116
	fndcl:  '('.oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma ')' fnres 
	fntype:  LFUNC '('.oarg_type_list_ocomma ')' fnres 
	oarg_type_list_ocomma: .    (261)

	LCHAN  shift 80
	LDDD  shift 257
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 261 (src line 1860)

	sym  goto 254
	ntype  goto 256
	arg_type  goto 252
	dotname  goto 235
	name  goto 202
	name_or_type  goto 253
	oarg_type_list_ocomma  goto 250
	arg_type_list  goto 251
	dotdotdot  goto 255
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 117
	fndcl:  sym.'(' oarg_type_list_ocomma ')' fnres 

	'('  shift 258
	.  error


state 118
	non_dcl_stmt:  labelname ':'.$$274 stmt 
	$$274: .    (274)

	.  reduce 274 (src line 1894)

	$$274  goto 259

state 119
	non_dcl_stmt:  LBREAK onew_name.    (277)

	.  reduce 277 (src line 1916)


state 120
	onew_name:  new_name.    (162)

	.  reduce 162 (src line 1227)


state 121
	new_name:  sym.    (159)

	.  reduce 159 (src line 1207)


state 122
	non_dcl_stmt:  LCONTINUE onew_name.    (278)

	.  reduce 278 (src line 1920)


state 123
	pexpr_no_paren:  pseudocall.    (140)
	non_dcl_stmt:  LGO pseudocall.    (279)

	'('  reduce 140 (src line 1100)
	'.'  reduce 140 (src line 1100)
	'{'  reduce 140 (src line 1100)
	'['  reduce 140 (src line 1100)
	.  reduce 279 (src line 1924)


state 124
	pseudocall:  pexpr.'(' ')' 
	pseudocall:  pexpr.'(' expr_or_type_list ocomma ')' 
	pseudocall:  pexpr.'(' expr_or_type_list LDDD ocomma ')' 
	pexpr_no_paren:  pexpr.'.' sym 
	pexpr_no_paren:  pexpr.'.' '(' expr_or_type ')' 
	pexpr_no_paren:  pexpr.'.' '(' LTYPE ')' 
	pexpr_no_paren:  pexpr.'[' expr ']' 
	pexpr_no_paren:  pexpr.'[' oexpr ':' oexpr ']' 
	pexpr_no_paren:  pexpr.'[' oexpr ':' oexpr ':' oexpr ']' 

	'('  shift 163
	'.'  shift 164
	'['  shift 165
	.  error


state 125
	name:  sym.    (168)

	.  reduce 168 (src line 1274)


state 126
	fntype:  LFUNC.'(' oarg_type_list_ocomma ')' fnres 

	'('  shift 260
	.  error


state 127
	pexpr_no_paren:  pseudocall.    (140)
	non_dcl_stmt:  LDEFER pseudocall.    (280)

	'('  reduce 140 (src line 1100)
	'.'  reduce 140 (src line 1100)
	'{'  reduce 140 (src line 1100)
	'['  reduce 140 (src line 1100)
	.  reduce 280 (src line 1928)


state 128
	non_dcl_stmt:  LGOTO new_name.    (281)

	.  reduce 281 (src line 1932)


state 129
	non_dcl_stmt:  LRETURN oexpr_list.    (282)

	.  reduce 282 (src line 1937)


state 130
	expr_list:  expr_list.',' expr 
	oexpr_list:  expr_list.    (306)

	','  shift 157
	.  reduce 306 (src line 2063)


state 131
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	expr_list:  expr.    (289)

	LANDAND  shift 136
	LANDNOT  shift 151
	LCOMM  shift 154
	LEQ  shift 137
	LGE  shift 141
	LGT  shift 142
	LLE  shift 140
	LLSH  shift 152
	LLT  shift 139
	LNE  shift 138
	LOROR  shift 135
	LRSH  shift 153
	'+'  shift 143
	'-'  shift 144
	'|'  shift 145
	'^'  shift 146
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	.  reduce 289 (src line 1994)


state 132
	simple_stmt:  expr LASOP.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 261
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 133
	simple_stmt:  expr LINC.    (54)

	.  reduce 54 (src line 528)


state 134
	simple_stmt:  expr LDEC.    (55)

	.  reduce 55 (src line 534)


state 135
	expr:  expr LOROR.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 262
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 136
	expr:  expr LANDAND.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 263
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 137
	expr:  expr LEQ.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 264
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 138
	expr:  expr LNE.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 265
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 139
	expr:  expr LLT.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 266
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 140
	expr:  expr LLE.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 267
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 141
	expr:  expr LGE.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 268
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 142
	expr:  expr LGT.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 269
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 143
	expr:  expr '+'.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 270
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 144
	expr:  expr '-'.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 271
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 145
	expr:  expr '|'.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 272
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 146
	expr:  expr '^'.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 273
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 147
	expr:  expr '*'.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 274
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 148
	expr:  expr '/'.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 275
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 149
	expr:  expr '%'.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 276
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 150
	expr:  expr '&'.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 277
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 151
	expr:  expr LANDNOT.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 278
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 152
	expr:  expr LLSH.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 279
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 153
	expr:  expr LRSH.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 280
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 154
	expr:  expr LCOMM.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 281
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 155
	simple_stmt:  expr_list '='.expr_list 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 131
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	expr_list  goto 282
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 156
	simple_stmt:  expr_list LCOLAS.expr_list 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 131
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	expr_list  goto 283
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 157
	expr_list:  expr_list ','.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 284
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 158
	for_stmt:  LFOR $$75.for_body 
	osimple_stmt: .    (307)

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LRANGE  shift 291
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 307 (src line 2065)

	sym  goto 125
	expr  goto 49
	fnliteral  goto 75
	for_body  goto 285
	for_header  goto 286
	name  goto 71
	osimple_stmt  goto 287
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	range_stmt  goto 288
	simple_stmt  goto 289
	uexpr  goto 57
	expr_list  goto 290
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 159
	switch_stmt:  LSWITCH $$89.if_header $$90 LBODY caseblock_list '}' 
	osimple_stmt: .    (307)

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 307 (src line 2065)

	sym  goto 125
	expr  goto 49
	fnliteral  goto 75
	if_header  goto 292
	name  goto 71
	osimple_stmt  goto 293
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	simple_stmt  goto 289
	uexpr  goto 57
	expr_list  goto 50
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 160
	select_stmt:  LSELECT $$92.LBODY caseblock_list '}' 

	LBODY  shift 294
	.  error


state 161
	doselect_stmt:  LDOSELECT $$96.doselect_hdr $$97 LBODY caseblock_list '}' 
	osimple_stmt: .    (307)

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 307 (src line 2065)

	sym  goto 125
	expr  goto 49
	fnliteral  goto 75
	name  goto 71
	osimple_stmt  goto 296
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	doselect_hdr  goto 295
	simple_stmt  goto 289
	uexpr  goto 57
	expr_list  goto 50
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 162
	if_stmt:  LIF $$79.if_header $$80 loop_body $$81 elseif_list else 
	osimple_stmt: .    (307)

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 307 (src line 2065)

	sym  goto 125
	expr  goto 49
	fnliteral  goto 75
	if_header  goto 297
	name  goto 71
	osimple_stmt  goto 293
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	simple_stmt  goto 289
	uexpr  goto 57
	expr_list  goto 50
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 163
	pseudocall:  pexpr '('.')' 
	pseudocall:  pexpr '('.expr_or_type_list ocomma ')' 
	pseudocall:  pexpr '('.expr_or_type_list LDDD ocomma ')' 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 182
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 181
	'&'  shift 61
	'('  shift 69
	')'  shift 298
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 176
	expr_or_type  goto 300
	fnliteral  goto 75
	name  goto 71
	non_expr_type  goto 177
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	expr_or_type_list  goto 299
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	recvchantype  goto 178
	othertype  goto 180
	fntype  goto 179
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 164
	pexpr_no_paren:  pexpr '.'.sym 
	pexpr_no_paren:  pexpr '.'.'(' expr_or_type ')' 
	pexpr_no_paren:  pexpr '.'.'(' LTYPE ')' 

	LNAME  shift 10
	'('  shift 302
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 301
	hidden_importsym  goto 11

state 165
	pexpr_no_paren:  pexpr '['.expr ']' 
	pexpr_no_paren:  pexpr '['.oexpr ':' oexpr ']' 
	pexpr_no_paren:  pexpr '['.oexpr ':' oexpr ':' oexpr ']' 
	oexpr: .    (303)

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 303 (src line 2053)

	sym  goto 125
	expr  goto 303
	fnliteral  goto 75
	name  goto 71
	oexpr  goto 304
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 166
	uexpr:  '*' uexpr.    (121)

	.  reduce 121 (src line 995)


state 167
	uexpr:  '&' uexpr.    (122)

	.  reduce 122 (src line 999)


state 168
	uexpr:  '+' uexpr.    (123)

	.  reduce 123 (src line 1010)


state 169
	uexpr:  '-' uexpr.    (124)

	.  reduce 124 (src line 1014)


state 170
	uexpr:  '!' uexpr.    (125)

	.  reduce 125 (src line 1018)


state 171
	uexpr:  '~' uexpr.    (126)

	.  reduce 126 (src line 1022)


state 172
	uexpr:  '^' uexpr.    (127)

	.  reduce 127 (src line 1027)


state 173
	uexpr:  LCOMM uexpr.    (128)

	.  reduce 128 (src line 1031)


state 174
	pexpr_no_paren:  pexpr_no_paren '{'.start_complit braced_keyval_list '}' 
	start_complit: .    (146)

	.  reduce 146 (src line 1129)

	start_complit  goto 305

state 175
	pexpr_no_paren:  '(' expr_or_type.')' '{' start_complit braced_keyval_list '}' 
	pexpr:  '(' expr_or_type.')' 

	')'  shift 306
	.  error


state 176
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	expr_or_type:  expr.    (154)

	LANDAND  shift 136
	LANDNOT  shift 151
	LCOMM  shift 154
	LEQ  shift 137
	LGE  shift 141
	LGT  shift 142
	LLE  shift 140
	LLSH  shift 152
	LLT  shift 139
	LNE  shift 138
	LOROR  shift 135
	LRSH  shift 153
	'+'  shift 143
	'-'  shift 144
	'|'  shift 145
	'^'  shift 146
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	.  reduce 154 (src line 1185)


state 177
	expr_or_type:  non_expr_type.    (155)

	.  reduce 155 (src line 1187)


state 178
	non_expr_type:  recvchantype.    (178)

	.  reduce 178 (src line 1317)


state 179
	non_expr_type:  fntype.    (179)
	convtype:  fntype.    (187)
	fnlitdcl:  fntype.    (227)

	error  reduce 227 (src line 1637)
	LBODY  reduce 227 (src line 1637)
	'('  reduce 187 (src line 1336)
	'{'  reduce 227 (src line 1637)
	.  reduce 179 (src line 1319)


state 180
	non_expr_type:  othertype.    (180)
	convtype:  othertype.    (188)
	comptype:  othertype.    (189)

	LBODY  reduce 189 (src line 1340)
	'('  reduce 188 (src line 1338)
	'{'  reduce 189 (src line 1340)
	.  reduce 180 (src line 1320)


state 181
	uexpr:  '*'.uexpr 
	non_expr_type:  '*'.non_expr_type 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 182
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 181
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	fnliteral  goto 75
	name  goto 71
	non_expr_type  goto 307
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 166
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	recvchantype  goto 178
	othertype  goto 180
	fntype  goto 179
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 182
	uexpr:  LCOMM.uexpr 
	recvchantype:  LCOMM.LCHAN ntype 
	recvchantype:  LCOMM.LCHAN implinterfacetype 

	LLITERAL  shift 70
	LCHAN  shift 308
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 173
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 183
	pexpr_no_paren:  convtype '('.expr ocomma ')' 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 309
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 184
	pexpr_no_paren:  comptype lbrace.start_complit braced_keyval_list '}' 
	start_complit: .    (146)

	.  reduce 146 (src line 1129)

	start_complit  goto 310

state 185
	lbrace:  LBODY.    (157)

	.  reduce 157 (src line 1192)


state 186
	lbrace:  '{'.    (158)

	.  reduce 158 (src line 1197)


state 187
	fnliteral:  fnlitdcl lbrace.stmt_list '}' 
	stmt: .    (263)

	error  shift 316
	LLITERAL  shift 70
	LBREAK  shift 42
	LCHAN  shift 80
	LCONST  shift 48
	LCONTINUE  shift 43
	LDEFER  shift 45
	LFALL  shift 41
	LFOR  shift 51
	LFUNC  shift 126
	LGO  shift 44
	LGOTO  shift 46
	LIF  shift 55
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LRETURN  shift 47
	LSELECT  shift 53
	LSTRUCT  shift 84
	LSWITCH  shift 52
	LTYPE  shift 32
	LVAR  shift 30
	LDOSELECT  shift 54
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	';'  reduce 263 (src line 1872)
	'{'  shift 317
	'}'  reduce 263 (src line 1872)
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 58
	stmt  goto 312
	compound_stmt  goto 313
	expr  goto 49
	fnliteral  goto 75
	for_stmt  goto 35
	if_stmt  goto 39
	non_dcl_stmt  goto 315
	labelname  goto 40
	name  goto 71
	new_name  goto 56
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	select_stmt  goto 37
	doselect_stmt  goto 38
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 57
	expr_list  goto 50
	stmt_list  goto 311
	common_dcl  goto 314
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 78

state 188
	fnliteral:  fnlitdcl error.    (229)

	.  reduce 229 (src line 1649)


state 189
	othertype:  '[' oexpr.']' ntype 

	']'  shift 318
	.  error


state 190
	othertype:  '[' LDDD.']' ntype 

	']'  shift 319
	.  error


state 191
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	oexpr:  expr.    (304)

	LANDAND  shift 136
	LANDNOT  shift 151
	LCOMM  shift 154
	LEQ  shift 137
	LGE  shift 141
	LGT  shift 142
	LLE  shift 140
	LLSH  shift 152
	LLT  shift 139
	LNE  shift 138
	LOROR  shift 135
	LRSH  shift 153
	'+'  shift 143
	'-'  shift 144
	'|'  shift 145
	'^'  shift 146
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	.  reduce 304 (src line 2057)


state 192
	othertype:  LCHAN non_recvchantype.    (199)

	.  reduce 199 (src line 1374)


state 193
	othertype:  LCHAN LCOMM.ntype 
	othertype:  LCHAN LCOMM.implinterfacetype 

	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LBODY  shift 185
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'{'  shift 186
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	lbrace  goto 200
	sym  goto 125
	ntype  goto 320
	dotname  goto 235
	name  goto 202
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	implinterfacetype  goto 321
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 194
	othertype:  LCHAN implinterfacetype.    (201)

	.  reduce 201 (src line 1384)


state 195
	non_recvchantype:  fntype.    (182)

	.  reduce 182 (src line 1326)


state 196
	non_recvchantype:  othertype.    (183)

	.  reduce 183 (src line 1328)


state 197
	non_recvchantype:  ptrtype.    (184)

	.  reduce 184 (src line 1329)


state 198
	non_recvchantype:  dotname.    (185)

	.  reduce 185 (src line 1330)


state 199
	non_recvchantype:  '('.ntype ')' 

	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	ntype  goto 322
	dotname  goto 235
	name  goto 202
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 200
	implinterfacetype:  lbrace.'}' 

	'}'  shift 323
	.  error


state 201
	ptrtype:  '*'.ntype 

	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	ntype  goto 324
	dotname  goto 235
	name  goto 202
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 202
	dotname:  name.    (195)
	dotname:  name.'.' sym 

	'.'  shift 325
	.  reduce 195 (src line 1350)


state 203
	othertype:  LMAP '['.ntype ']' ntype 

	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	ntype  goto 326
	dotname  goto 235
	name  goto 202
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 204
	structtype:  LSTRUCT lbrace.structdcl_list osemi '}' 
	structtype:  LSTRUCT lbrace.'}' 

	LNAME  shift 336
	'*'  shift 333
	'('  shift 332
	'}'  shift 328
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 121
	packname  goto 335
	embed  goto 331
	new_name  goto 334
	new_name_list  goto 330
	structdcl  goto 329
	structdcl_list  goto 327
	hidden_importsym  goto 11

state 205
	interfacetype:  LINTERFACE lbrace.interfacedcl_list osemi '}' 
	interfacetype:  LINTERFACE lbrace.'}' 

	LNAME  shift 336
	'('  shift 342
	'}'  shift 338
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 121
	packname  goto 341
	interfacedcl  goto 339
	new_name  goto 340
	interfacedcl_list  goto 337
	hidden_importsym  goto 11

state 206
	import:  LIMPORT '(' import_stmt_list.osemi ')' 
	import_stmt_list:  import_stmt_list.';' import_stmt 
	osemi: .    (299)

	';'  shift 344
	.  reduce 299 (src line 2047)

	osemi  goto 343

state 207
	import:  LIMPORT '(' ')'.    (10)

	.  reduce 10 (src line 234)


state 208
	import_stmt_list:  import_stmt.    (13)

	.  reduce 13 (src line 283)


state 209
	import_stmt:  import_here import_package.import_there 
	$$21: .    (21)

	.  reduce 21 (src line 335)

	import_there  goto 345
	$$21  goto 15

state 210
	import_stmt:  import_here import_there.    (12)

	.  reduce 12 (src line 272)


state 211
	import_here:  sym LLITERAL.    (16)

	.  reduce 16 (src line 295)


state 212
	import_here:  '.' LLITERAL.    (17)

	.  reduce 17 (src line 302)


state 213
	hidden_importsym:  '@' LLITERAL '.' LNAME.    (166)

	.  reduce 166 (src line 1244)


state 214
	hidden_importsym:  '@' LLITERAL '.' '?'.    (167)

	.  reduce 167 (src line 1259)


state 215
	import_there:  $$21 hidden_import_list '$' '$'.    (22)

	.  reduce 22 (src line 339)


state 216
	hidden_import:  LIMPORT LNAME.LLITERAL ';' 

	LLITERAL  shift 346
	.  error


state 217
	hidden_import:  LVAR hidden_pkg_importsym.hidden_type ';' 

	LCHAN  shift 358
	LFUNC  shift 360
	LINTERFACE  shift 356
	LMAP  shift 354
	LNAME  shift 352
	LSTRUCT  shift 355
	LCOMM  shift 359
	'*'  shift 357
	'['  shift 353
	'@'  shift 13
	.  error

	hidden_importsym  goto 351
	hidden_type  goto 347
	hidden_type_misc  goto 348
	hidden_type_func  goto 350
	hidden_type_recv_chan  goto 349

state 218
	hidden_pkg_importsym:  hidden_importsym.    (323)

	.  reduce 323 (src line 2139)


state 219
	hidden_import:  LCONST hidden_pkg_importsym.'=' hidden_constant ';' 
	hidden_import:  LCONST hidden_pkg_importsym.hidden_type '=' hidden_constant ';' 

	LCHAN  shift 358
	LFUNC  shift 360
	LINTERFACE  shift 356
	LMAP  shift 354
	LNAME  shift 352
	LSTRUCT  shift 355
	LCOMM  shift 359
	'*'  shift 357
	'='  shift 361
	'['  shift 353
	'@'  shift 13
	.  error

	hidden_importsym  goto 351
	hidden_type  goto 362
	hidden_type_misc  goto 348
	hidden_type_func  goto 350
	hidden_type_recv_chan  goto 349

state 220
	hidden_import:  LTYPE hidden_pkgtype.hidden_type ';' 

	LCHAN  shift 358
	LFUNC  shift 360
	LINTERFACE  shift 356
	LMAP  shift 354
	LNAME  shift 352
	LSTRUCT  shift 355
	LCOMM  shift 359
	'*'  shift 357
	'['  shift 353
	'@'  shift 13
	.  error

	hidden_importsym  goto 351
	hidden_type  goto 363
	hidden_type_misc  goto 348
	hidden_type_func  goto 350
	hidden_type_recv_chan  goto 349

state 221
	hidden_pkgtype:  hidden_pkg_importsym.    (324)

	.  reduce 324 (src line 2146)


state 222
	hidden_import:  LFUNC hidden_fndcl.fnbody ';' 
	fnbody: .    (222)

	'{'  shift 249
	.  reduce 222 (src line 1610)

	fnbody  goto 364

state 223
	hidden_fndcl:  hidden_pkg_importsym.'(' ohidden_funarg_list ')' ohidden_funres 

	'('  shift 365
	.  error


state 224
	hidden_fndcl:  '('.hidden_funarg_list ')' sym '(' ohidden_funarg_list ')' ohidden_funres 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 368
	hidden_importsym  goto 11
	hidden_funarg  goto 367
	hidden_funarg_list  goto 366

state 225
	common_dcl:  LVAR '(' vardcl_list.osemi ')' 
	vardcl_list:  vardcl_list.';' vardcl 
	osemi: .    (299)

	';'  shift 370
	.  reduce 299 (src line 2047)

	osemi  goto 369

state 226
	common_dcl:  LVAR '(' ')'.    (30)

	.  reduce 30 (src line 377)


state 227
	vardcl_list:  vardcl.    (232)

	.  reduce 232 (src line 1676)


state 228
	vardcl:  dcl_name_list ntype.    (39)
	vardcl:  dcl_name_list ntype.'=' expr_list 

	'='  shift 371
	.  reduce 39 (src line 423)


state 229
	vardcl:  dcl_name_list '='.expr_list 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 131
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	expr_list  goto 372
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 230
	dcl_name_list:  dcl_name_list ','.dcl_name 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 107
	dcl_name  goto 373
	hidden_importsym  goto 11

state 231
	ntype:  recvchantype.    (172)

	.  reduce 172 (src line 1306)


state 232
	ntype:  fntype.    (173)

	.  reduce 173 (src line 1308)


state 233
	ntype:  othertype.    (174)

	.  reduce 174 (src line 1309)


state 234
	ntype:  ptrtype.    (175)

	.  reduce 175 (src line 1310)


state 235
	ntype:  dotname.    (176)

	.  reduce 176 (src line 1311)


state 236
	ntype:  '('.ntype ')' 

	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	ntype  goto 374
	dotname  goto 235
	name  goto 202
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 237
	recvchantype:  LCOMM.LCHAN ntype 
	recvchantype:  LCOMM.LCHAN implinterfacetype 

	LCHAN  shift 375
	.  error


state 238
	common_dcl:  lconst '(' constdcl.osemi ')' 
	common_dcl:  lconst '(' constdcl.';' constdcl_list osemi ')' 
	osemi: .    (299)

	';'  shift 377
	.  reduce 299 (src line 2047)

	osemi  goto 376

state 239
	common_dcl:  lconst '(' ')'.    (34)

	.  reduce 34 (src line 399)


state 240
	constdcl:  dcl_name_list ntype.'=' expr_list 

	'='  shift 378
	.  error


state 241
	constdcl:  dcl_name_list '='.expr_list 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 131
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	expr_list  goto 379
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 242
	common_dcl:  LTYPE '(' typedcl_list.osemi ')' 
	typedcl_list:  typedcl_list.';' typedcl 
	osemi: .    (299)

	';'  shift 381
	.  reduce 299 (src line 2047)

	osemi  goto 380

state 243
	common_dcl:  LTYPE '(' ')'.    (37)

	.  reduce 37 (src line 412)


state 244
	typedcl_list:  typedcl.    (236)

	.  reduce 236 (src line 1690)


state 245
	typedcl:  typedclname ntype.    (48)

	.  reduce 48 (src line 467)


state 246
	typedcl:  typedclname implstructtype.    (49)

	.  reduce 49 (src line 472)


state 247
	implstructtype:  lbrace.structdcl_list osemi '}' 
	implstructtype:  lbrace.'}' 

	LNAME  shift 336
	'*'  shift 333
	'('  shift 332
	'}'  shift 383
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 121
	packname  goto 335
	embed  goto 331
	new_name  goto 334
	new_name_list  goto 330
	structdcl  goto 329
	structdcl_list  goto 382
	hidden_importsym  goto 11

state 248
	xfndcl:  LFUNC fndcl fnbody.    (216)

	.  reduce 216 (src line 1471)


state 249
	fnbody:  '{'.stmt_list '}' 
	stmt: .    (263)

	error  shift 316
	LLITERAL  shift 70
	LBREAK  shift 42
	LCHAN  shift 80
	LCONST  shift 48
	LCONTINUE  shift 43
	LDEFER  shift 45
	LFALL  shift 41
	LFOR  shift 51
	LFUNC  shift 126
	LGO  shift 44
	LGOTO  shift 46
	LIF  shift 55
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LRETURN  shift 47
	LSELECT  shift 53
	LSTRUCT  shift 84
	LSWITCH  shift 52
	LTYPE  shift 32
	LVAR  shift 30
	LDOSELECT  shift 54
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	';'  reduce 263 (src line 1872)
	'{'  shift 317
	'}'  reduce 263 (src line 1872)
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 58
	stmt  goto 312
	compound_stmt  goto 313
	expr  goto 49
	fnliteral  goto 75
	for_stmt  goto 35
	if_stmt  goto 39
	non_dcl_stmt  goto 315
	labelname  goto 40
	name  goto 71
	new_name  goto 56
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	select_stmt  goto 37
	doselect_stmt  goto 38
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 57
	expr_list  goto 50
	stmt_list  goto 384
	common_dcl  goto 314
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 78

state 250
	fndcl:  '(' oarg_type_list_ocomma.')' sym '(' oarg_type_list_ocomma ')' fnres 
	fntype:  LFUNC '(' oarg_type_list_ocomma.')' fnres 

	')'  shift 385
	.  error


state 251
	arg_type_list:  arg_type_list.',' arg_type 
	oarg_type_list_ocomma:  arg_type_list.ocomma 
	ocomma: .    (301)

	','  shift 386
	.  reduce 301 (src line 2050)

	ocomma  goto 387

state 252
	arg_type_list:  arg_type.    (259)

	.  reduce 259 (src line 1850)


state 253
	arg_type:  name_or_type.    (255)

	.  reduce 255 (src line 1834)


state 254
	name:  sym.    (168)
	arg_type:  sym.name_or_type 
	arg_type:  sym.dotdotdot 

	LCHAN  shift 80
	LDDD  shift 257
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 168 (src line 1274)

	sym  goto 125
	ntype  goto 256
	dotname  goto 235
	name  goto 202
	name_or_type  goto 388
	dotdotdot  goto 389
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 255
	arg_type:  dotdotdot.    (258)

	.  reduce 258 (src line 1848)


state 256
	name_or_type:  ntype.    (156)

	.  reduce 156 (src line 1189)


state 257
	dotdotdot:  LDDD.    (170)
	dotdotdot:  LDDD.ntype 

	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 170 (src line 1295)

	sym  goto 125
	ntype  goto 390
	dotname  goto 235
	name  goto 202
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 258
	fndcl:  sym '('.oarg_type_list_ocomma ')' fnres 
	oarg_type_list_ocomma: .    (261)

	LCHAN  shift 80
	LDDD  shift 257
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 261 (src line 1860)

	sym  goto 254
	ntype  goto 256
	arg_type  goto 252
	dotname  goto 235
	name  goto 202
	name_or_type  goto 253
	oarg_type_list_ocomma  goto 391
	arg_type_list  goto 251
	dotdotdot  goto 255
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 259
	non_dcl_stmt:  labelname ':' $$274.stmt 
	stmt: .    (263)

	error  shift 316
	LLITERAL  shift 70
	LBREAK  shift 42
	LCASE  reduce 263 (src line 1872)
	LCHAN  shift 80
	LCONST  shift 48
	LCONTINUE  shift 43
	LDEFAULT  reduce 263 (src line 1872)
	LDEFER  shift 45
	LFALL  shift 41
	LFOR  shift 51
	LFUNC  shift 126
	LGO  shift 44
	LGOTO  shift 46
	LIF  shift 55
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LRETURN  shift 47
	LSELECT  shift 53
	LSTRUCT  shift 84
	LSWITCH  shift 52
	LTYPE  shift 32
	LVAR  shift 30
	LDOSELECT  shift 54
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	';'  reduce 263 (src line 1872)
	'{'  shift 317
	'}'  reduce 263 (src line 1872)
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 58
	stmt  goto 392
	compound_stmt  goto 313
	expr  goto 49
	fnliteral  goto 75
	for_stmt  goto 35
	if_stmt  goto 39
	non_dcl_stmt  goto 315
	labelname  goto 40
	name  goto 71
	new_name  goto 56
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	select_stmt  goto 37
	doselect_stmt  goto 38
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 57
	expr_list  goto 50
	common_dcl  goto 314
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 78

state 260
	fntype:  LFUNC '('.oarg_type_list_ocomma ')' fnres 
	oarg_type_list_ocomma: .    (261)

	LCHAN  shift 80
	LDDD  shift 257
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 261 (src line 1860)

	sym  goto 254
	ntype  goto 256
	arg_type  goto 252
	dotname  goto 235
	name  goto 202
	name_or_type  goto 253
	oarg_type_list_ocomma  goto 393
	arg_type_list  goto 251
	dotdotdot  goto 255
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 261
	simple_stmt:  expr LASOP expr.    (51)
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDAND  shift 136
	LANDNOT  shift 151
	LCOMM  shift 154
	LEQ  shift 137
	LGE  shift 141
	LGT  shift 142
	LLE  shift 140
	LLSH  shift 152
	LLT  shift 139
	LNE  shift 138
	LOROR  shift 135
	LRSH  shift 153
	'+'  shift 143
	'-'  shift 144
	'|'  shift 145
	'^'  shift 146
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	.  reduce 51 (src line 493)


state 262
	expr:  expr.LOROR expr 
	expr:  expr LOROR expr.    (100)
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDAND  shift 136
	LANDNOT  shift 151
	LEQ  shift 137
	LGE  shift 141
	LGT  shift 142
	LLE  shift 140
	LLSH  shift 152
	LLT  shift 139
	LNE  shift 138
	LRSH  shift 153
	'+'  shift 143
	'-'  shift 144
	'|'  shift 145
	'^'  shift 146
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	.  reduce 100 (src line 911)


state 263
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr LANDAND expr.    (101)
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 151
	LEQ  shift 137
	LGE  shift 141
	LGT  shift 142
	LLE  shift 140
	LLSH  shift 152
	LLT  shift 139
	LNE  shift 138
	LRSH  shift 153
	'+'  shift 143
	'-'  shift 144
	'|'  shift 145
	'^'  shift 146
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	.  reduce 101 (src line 915)


state 264
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr LEQ expr.    (102)
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 151
	LLSH  shift 152
	LRSH  shift 153
	'+'  shift 143
	'-'  shift 144
	'|'  shift 145
	'^'  shift 146
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	.  reduce 102 (src line 919)


state 265
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr LNE expr.    (103)
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 151
	LLSH  shift 152
	LRSH  shift 153
	'+'  shift 143
	'-'  shift 144
	'|'  shift 145
	'^'  shift 146
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	.  reduce 103 (src line 923)


state 266
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr LLT expr.    (104)
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 151
	LLSH  shift 152
	LRSH  shift 153
	'+'  shift 143
	'-'  shift 144
	'|'  shift 145
	'^'  shift 146
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	.  reduce 104 (src line 927)


state 267
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr LLE expr.    (105)
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 151
	LLSH  shift 152
	LRSH  shift 153
	'+'  shift 143
	'-'  shift 144
	'|'  shift 145
	'^'  shift 146
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	.  reduce 105 (src line 931)


state 268
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr LGE expr.    (106)
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 151
	LLSH  shift 152
	LRSH  shift 153
	'+'  shift 143
	'-'  shift 144
	'|'  shift 145
	'^'  shift 146
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	.  reduce 106 (src line 935)


state 269
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr LGT expr.    (107)
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 151
	LLSH  shift 152
	LRSH  shift 153
	'+'  shift 143
	'-'  shift 144
	'|'  shift 145
	'^'  shift 146
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	.  reduce 107 (src line 939)


state 270
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr '+' expr.    (108)
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 151
	LLSH  shift 152
	LRSH  shift 153
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	.  reduce 108 (src line 943)


state 271
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr '-' expr.    (109)
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 151
	LLSH  shift 152
	LRSH  shift 153
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	.  reduce 109 (src line 947)


state 272
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr '|' expr.    (110)
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 151
	LLSH  shift 152
	LRSH  shift 153
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	.  reduce 110 (src line 951)


state 273
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr '^' expr.    (111)
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDNOT  shift 151
	LLSH  shift 152
	LRSH  shift 153
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	.  reduce 111 (src line 955)


state 274
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr '*' expr.    (112)
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	.  reduce 112 (src line 959)


state 275
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr '/' expr.    (113)
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	.  reduce 113 (src line 963)


state 276
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr '%' expr.    (114)
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	.  reduce 114 (src line 967)


state 277
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr '&' expr.    (115)
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	.  reduce 115 (src line 971)


state 278
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr LANDNOT expr.    (116)
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	.  reduce 116 (src line 975)


state 279
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr LLSH expr.    (117)
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	.  reduce 117 (src line 979)


state 280
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr LRSH expr.    (118)
	expr:  expr.LCOMM expr 

	.  reduce 118 (src line 983)


state 281
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	expr:  expr LCOMM expr.    (119)

	LANDAND  shift 136
	LANDNOT  shift 151
	LEQ  shift 137
	LGE  shift 141
	LGT  shift 142
	LLE  shift 140
	LLSH  shift 152
	LLT  shift 139
	LNE  shift 138
	LOROR  shift 135
	LRSH  shift 153
	'+'  shift 143
	'-'  shift 144
	'|'  shift 145
	'^'  shift 146
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	.  reduce 119 (src line 988)


state 282
	simple_stmt:  expr_list '=' expr_list.    (52)
	expr_list:  expr_list.',' expr 

	','  shift 157
	.  reduce 52 (src line 498)


state 283
	simple_stmt:  expr_list LCOLAS expr_list.    (53)
	expr_list:  expr_list.',' expr 

	','  shift 157
	.  reduce 53 (src line 510)


state 284
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	expr_list:  expr_list ',' expr.    (290)

	LANDAND  shift 136
	LANDNOT  shift 151
	LCOMM  shift 154
	LEQ  shift 137
	LGE  shift 141
	LGT  shift 142
	LLE  shift 140
	LLSH  shift 152
	LLT  shift 139
	LNE  shift 138
	LOROR  shift 135
	LRSH  shift 153
	'+'  shift 143
	'-'  shift 144
	'|'  shift 145
	'^'  shift 146
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	.  reduce 290 (src line 1999)


state 285
	for_stmt:  LFOR $$75 for_body.    (76)

	.  reduce 76 (src line 732)


state 286
	for_body:  for_header.loop_body 

	LBODY  shift 395
	.  error

	loop_body  goto 394

state 287
	for_header:  osimple_stmt.';' osimple_stmt ';' osimple_stmt 
	for_header:  osimple_stmt.    (72)

	';'  shift 396
	.  reduce 72 (src line 712)


state 288
	for_header:  range_stmt.    (73)

	.  reduce 73 (src line 718)


state 289
	osimple_stmt:  simple_stmt.    (308)

	.  reduce 308 (src line 2069)


state 290
	simple_stmt:  expr_list.'=' expr_list 
	simple_stmt:  expr_list.LCOLAS expr_list 
	range_stmt:  expr_list.'=' LRANGE expr 
	range_stmt:  expr_list.LCOLAS LRANGE expr 
	expr_list:  expr_list.',' expr 

	LCOLAS  shift 398
	'='  shift 397
	','  shift 157
	.  error


state 291
	range_stmt:  LRANGE.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 399
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 292
	switch_stmt:  LSWITCH $$89 if_header.$$90 LBODY caseblock_list '}' 
	$$90: .    (90)

	.  reduce 90 (src line 827)

	$$90  goto 400

state 293
	if_header:  osimple_stmt.    (77)
	if_header:  osimple_stmt.';' osimple_stmt 

	';'  shift 401
	.  reduce 77 (src line 738)


state 294
	select_stmt:  LSELECT $$92 LBODY.caseblock_list '}' 
	caseblock_list: .    (64)

	.  reduce 64 (src line 658)

	caseblock_list  goto 402

state 295
	doselect_stmt:  LDOSELECT $$96 doselect_hdr.$$97 LBODY caseblock_list '}' 
	$$97: .    (97)

	.  reduce 97 (src line 887)

	$$97  goto 403

state 296
	doselect_hdr:  osimple_stmt.';' osimple_stmt ';' osimple_stmt 
	doselect_hdr:  osimple_stmt.    (95)

	';'  shift 404
	.  reduce 95 (src line 872)


state 297
	if_stmt:  LIF $$79 if_header.$$80 loop_body $$81 elseif_list else 
	$$80: .    (80)

	.  reduce 80 (src line 761)

	$$80  goto 405

state 298
	pseudocall:  pexpr '(' ')'.    (129)

	.  reduce 129 (src line 1040)


state 299
	pseudocall:  pexpr '(' expr_or_type_list.ocomma ')' 
	pseudocall:  pexpr '(' expr_or_type_list.LDDD ocomma ')' 
	expr_or_type_list:  expr_or_type_list.',' expr_or_type 
	ocomma: .    (301)

	LDDD  shift 407
	','  shift 408
	.  reduce 301 (src line 2050)

	ocomma  goto 406

state 300
	expr_or_type_list:  expr_or_type.    (291)

	.  reduce 291 (src line 2004)


state 301
	pexpr_no_paren:  pexpr '.' sym.    (134)

	.  reduce 134 (src line 1063)


state 302
	pexpr_no_paren:  pexpr '.' '('.expr_or_type ')' 
	pexpr_no_paren:  pexpr '.' '('.LTYPE ')' 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LTYPE  shift 410
	LCOMM  shift 182
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 181
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 176
	expr_or_type  goto 409
	fnliteral  goto 75
	name  goto 71
	non_expr_type  goto 177
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	recvchantype  goto 178
	othertype  goto 180
	fntype  goto 179
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 303
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	pexpr_no_paren:  pexpr '[' expr.']' 
	oexpr:  expr.    (304)

	LANDAND  shift 136
	LANDNOT  shift 151
	LCOMM  shift 154
	LEQ  shift 137
	LGE  shift 141
	LGT  shift 142
	LLE  shift 140
	LLSH  shift 152
	LLT  shift 139
	LNE  shift 138
	LOROR  shift 135
	LRSH  shift 153
	'+'  shift 143
	'-'  shift 144
	'|'  shift 145
	'^'  shift 146
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	']'  shift 411
	.  reduce 304 (src line 2057)


state 304
	pexpr_no_paren:  pexpr '[' oexpr.':' oexpr ']' 
	pexpr_no_paren:  pexpr '[' oexpr.':' oexpr ':' oexpr ']' 

	':'  shift 412
	.  error


state 305
	pexpr_no_paren:  pexpr_no_paren '{' start_complit.braced_keyval_list '}' 
	braced_keyval_list: .    (297)

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'{'  shift 418
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 297 (src line 2035)

	sym  goto 125
	expr  goto 417
	bare_complitexpr  goto 416
	fnliteral  goto 75
	keyval  goto 415
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	keyval_list  goto 414
	braced_keyval_list  goto 413
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 306
	pexpr_no_paren:  '(' expr_or_type ')'.'{' start_complit braced_keyval_list '}' 
	pexpr:  '(' expr_or_type ')'.    (153)

	'{'  shift 419
	.  reduce 153 (src line 1172)


state 307
	non_expr_type:  '*' non_expr_type.    (181)

	.  reduce 181 (src line 1321)


state 308
	othertype:  LCHAN.non_recvchantype 
	othertype:  LCHAN.LCOMM ntype 
	othertype:  LCHAN.implinterfacetype 
	othertype:  LCHAN.LCOMM implinterfacetype 
	recvchantype:  LCOMM LCHAN.ntype 
	recvchantype:  LCOMM LCHAN.implinterfacetype 

	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LBODY  shift 185
	LCOMM  shift 420
	'*'  shift 201
	'('  shift 427
	'{'  shift 186
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	lbrace  goto 200
	sym  goto 125
	ntype  goto 422
	dotname  goto 426
	name  goto 202
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 425
	implinterfacetype  goto 421
	recvchantype  goto 231
	non_recvchantype  goto 192
	othertype  goto 424
	fntype  goto 423
	hidden_importsym  goto 11

state 309
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	pexpr_no_paren:  convtype '(' expr.ocomma ')' 
	ocomma: .    (301)

	LANDAND  shift 136
	LANDNOT  shift 151
	LCOMM  shift 154
	LEQ  shift 137
	LGE  shift 141
	LGT  shift 142
	LLE  shift 140
	LLSH  shift 152
	LLT  shift 139
	LNE  shift 138
	LOROR  shift 135
	LRSH  shift 153
	'+'  shift 143
	'-'  shift 144
	'|'  shift 145
	'^'  shift 146
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	','  shift 429
	.  reduce 301 (src line 2050)

	ocomma  goto 428

state 310
	pexpr_no_paren:  comptype lbrace start_complit.braced_keyval_list '}' 
	braced_keyval_list: .    (297)

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'{'  shift 418
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 297 (src line 2035)

	sym  goto 125
	expr  goto 417
	bare_complitexpr  goto 416
	fnliteral  goto 75
	keyval  goto 415
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	keyval_list  goto 414
	braced_keyval_list  goto 430
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 311
	fnliteral:  fnlitdcl lbrace stmt_list.'}' 
	stmt_list:  stmt_list.';' stmt 

	';'  shift 432
	'}'  shift 431
	.  error


state 312
	stmt_list:  stmt.    (283)

	.  reduce 283 (src line 1958)


state 313
	stmt:  compound_stmt.    (264)

	.  reduce 264 (src line 1876)


state 314
	stmt:  common_dcl.    (265)

	.  reduce 265 (src line 1877)


state 315
	stmt:  non_dcl_stmt.    (266)

	.  reduce 266 (src line 1881)


state 316
	stmt:  error.    (267)

	.  reduce 267 (src line 1882)


state 317
	compound_stmt:  '{'.$$60 stmt_list '}' 
	$$60: .    (60)

	.  reduce 60 (src line 612)

	$$60  goto 433

state 318
	othertype:  '[' oexpr ']'.ntype 

	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	ntype  goto 434
	dotname  goto 235
	name  goto 202
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 319
	othertype:  '[' LDDD ']'.ntype 

	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	ntype  goto 435
	dotname  goto 235
	name  goto 202
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 320
	othertype:  LCHAN LCOMM ntype.    (200)

	.  reduce 200 (src line 1379)


state 321
	othertype:  LCHAN LCOMM implinterfacetype.    (202)

	.  reduce 202 (src line 1389)


state 322
	non_recvchantype:  '(' ntype.')' 

	')'  shift 436
	.  error


state 323
	implinterfacetype:  lbrace '}'.    (215)

	.  reduce 215 (src line 1460)


state 324
	ptrtype:  '*' ntype.    (206)

	.  reduce 206 (src line 1401)


state 325
	dotname:  name '.'.sym 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 437
	hidden_importsym  goto 11

state 326
	othertype:  LMAP '[' ntype.']' ntype 

	']'  shift 438
	.  error


state 327
	structtype:  LSTRUCT lbrace structdcl_list.osemi '}' 
	structdcl_list:  structdcl_list.';' structdcl 
	osemi: .    (299)

	';'  shift 440
	.  reduce 299 (src line 2047)

	osemi  goto 439

state 328
	structtype:  LSTRUCT lbrace '}'.    (210)

	.  reduce 210 (src line 1428)


state 329
	structdcl_list:  structdcl.    (238)

	.  reduce 238 (src line 1700)


state 330
	structdcl:  new_name_list.ntype oliteral 
	new_name_list:  new_name_list.',' new_name 

	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	','  shift 442
	.  error

	sym  goto 125
	ntype  goto 441
	dotname  goto 235
	name  goto 202
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 331
	structdcl:  embed.oliteral 
	oliteral: .    (315)

	LLITERAL  shift 444
	.  reduce 315 (src line 2089)

	oliteral  goto 443

state 332
	structdcl:  '('.embed ')' oliteral 
	structdcl:  '('.'*' embed ')' oliteral 

	LNAME  shift 447
	'*'  shift 446
	.  error

	packname  goto 335
	embed  goto 445

state 333
	structdcl:  '*'.embed oliteral 
	structdcl:  '*'.'(' embed ')' oliteral 

	LNAME  shift 447
	'('  shift 449
	.  error

	packname  goto 335
	embed  goto 448

state 334
	new_name_list:  new_name.    (285)

	.  reduce 285 (src line 1974)


state 335
	embed:  packname.    (250)

	.  reduce 250 (src line 1799)


state 336
	sym:  LNAME.    (163)
	packname:  LNAME.    (248)
	packname:  LNAME.'.' sym 

	LLITERAL  reduce 248 (src line 1774)
	';'  reduce 248 (src line 1774)
	'.'  shift 450
	'}'  reduce 248 (src line 1774)
	.  reduce 163 (src line 1229)


state 337
	interfacetype:  LINTERFACE lbrace interfacedcl_list.osemi '}' 
	interfacedcl_list:  interfacedcl_list.';' interfacedcl 
	osemi: .    (299)

	';'  shift 452
	.  reduce 299 (src line 2047)

	osemi  goto 451

state 338
	interfacetype:  LINTERFACE lbrace '}'.    (214)

	.  reduce 214 (src line 1454)


state 339
	interfacedcl_list:  interfacedcl.    (240)

	.  reduce 240 (src line 1707)


state 340
	interfacedcl:  new_name.indcl 

	'('  shift 454
	.  error

	indcl  goto 453

state 341
	interfacedcl:  packname.    (252)

	.  reduce 252 (src line 1811)


state 342
	interfacedcl:  '('.packname ')' 

	LNAME  shift 447
	.  error

	packname  goto 455

state 343
	import:  LIMPORT '(' import_stmt_list osemi.')' 

	')'  shift 456
	.  error


state 344
	import_stmt_list:  import_stmt_list ';'.import_stmt 
	osemi:  ';'.    (300)

	LLITERAL  shift 90
	LNAME  shift 10
	'.'  shift 92
	'?'  shift 12
	'@'  shift 13
	.  reduce 300 (src line 2048)

	import_here  goto 89
	sym  goto 91
	hidden_importsym  goto 11
	import_stmt  goto 457

state 345
	import_stmt:  import_here import_package import_there.    (11)

	.  reduce 11 (src line 236)


state 346
	hidden_import:  LIMPORT LNAME LLITERAL.';' 

	';'  shift 458
	.  error


state 347
	hidden_import:  LVAR hidden_pkg_importsym hidden_type.';' 

	';'  shift 459
	.  error


state 348
	hidden_type:  hidden_type_misc.    (325)

	.  reduce 325 (src line 2157)


state 349
	hidden_type:  hidden_type_recv_chan.    (326)

	.  reduce 326 (src line 2159)


state 350
	hidden_type:  hidden_type_func.    (327)

	.  reduce 327 (src line 2160)


state 351
	hidden_type_misc:  hidden_importsym.    (330)

	.  reduce 330 (src line 2166)


state 352
	hidden_type_misc:  LNAME.    (331)

	.  reduce 331 (src line 2171)


state 353
	hidden_type_misc:  '['.']' hidden_type 
	hidden_type_misc:  '['.LLITERAL ']' hidden_type 

	LLITERAL  shift 461
	']'  shift 460
	.  error


state 354
	hidden_type_misc:  LMAP.'[' hidden_type ']' hidden_type 

	'['  shift 462
	.  error


state 355
	hidden_type_misc:  LSTRUCT.'{' ohidden_structdcl_list '}' 

	'{'  shift 463
	.  error


state 356
	hidden_type_misc:  LINTERFACE.'{' ohidden_interfacedcl_list '}' 

	'{'  shift 464
	.  error


state 357
	hidden_type_misc:  '*'.hidden_type 

	LCHAN  shift 358
	LFUNC  shift 360
	LINTERFACE  shift 356
	LMAP  shift 354
	LNAME  shift 352
	LSTRUCT  shift 355
	LCOMM  shift 359
	'*'  shift 357
	'['  shift 353
	'@'  shift 13
	.  error

	hidden_importsym  goto 351
	hidden_type  goto 465
	hidden_type_misc  goto 348
	hidden_type_func  goto 350
	hidden_type_recv_chan  goto 349

state 358
	hidden_type_misc:  LCHAN.hidden_type_non_recv_chan 
	hidden_type_misc:  LCHAN.'(' hidden_type_recv_chan ')' 
	hidden_type_misc:  LCHAN.LCOMM hidden_type 

	LCHAN  shift 358
	LFUNC  shift 360
	LINTERFACE  shift 356
	LMAP  shift 354
	LNAME  shift 352
	LSTRUCT  shift 355
	LCOMM  shift 468
	'*'  shift 357
	'('  shift 467
	'['  shift 353
	'@'  shift 13
	.  error

	hidden_importsym  goto 351
	hidden_type_misc  goto 469
	hidden_type_func  goto 470
	hidden_type_non_recv_chan  goto 466

state 359
	hidden_type_recv_chan:  LCOMM.LCHAN hidden_type 

	LCHAN  shift 471
	.  error


state 360
	hidden_type_func:  LFUNC.'(' ohidden_funarg_list ')' ohidden_funres 

	'('  shift 472
	.  error


state 361
	hidden_import:  LCONST hidden_pkg_importsym '='.hidden_constant ';' 

	LLITERAL  shift 476
	LNAME  shift 10
	'-'  shift 477
	'('  shift 475
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 478
	hidden_importsym  goto 11
	hidden_constant  goto 473
	hidden_literal  goto 474

state 362
	hidden_import:  LCONST hidden_pkg_importsym hidden_type.'=' hidden_constant ';' 

	'='  shift 479
	.  error


state 363
	hidden_import:  LTYPE hidden_pkgtype hidden_type.';' 

	';'  shift 480
	.  error


state 364
	hidden_import:  LFUNC hidden_fndcl fnbody.';' 

	';'  shift 481
	.  error


state 365
	hidden_fndcl:  hidden_pkg_importsym '('.ohidden_funarg_list ')' ohidden_funres 
	ohidden_funarg_list: .    (309)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 309 (src line 2071)

	sym  goto 368
	hidden_importsym  goto 11
	hidden_funarg  goto 367
	hidden_funarg_list  goto 483
	ohidden_funarg_list  goto 482

state 366
	hidden_fndcl:  '(' hidden_funarg_list.')' sym '(' ohidden_funarg_list ')' ohidden_funres 
	hidden_funarg_list:  hidden_funarg_list.',' hidden_funarg 

	')'  shift 484
	','  shift 485
	.  error


state 367
	hidden_funarg_list:  hidden_funarg.    (359)

	.  reduce 359 (src line 2366)


state 368
	hidden_funarg:  sym.hidden_type oliteral 
	hidden_funarg:  sym.LDDD hidden_type oliteral 

	LCHAN  shift 358
	LDDD  shift 487
	LFUNC  shift 360
	LINTERFACE  shift 356
	LMAP  shift 354
	LNAME  shift 352
	LSTRUCT  shift 355
	LCOMM  shift 359
	'*'  shift 357
	'['  shift 353
	'@'  shift 13
	.  error

	hidden_importsym  goto 351
	hidden_type  goto 486
	hidden_type_misc  goto 348
	hidden_type_func  goto 350
	hidden_type_recv_chan  goto 349

state 369
	common_dcl:  LVAR '(' vardcl_list osemi.')' 

	')'  shift 488
	.  error


state 370
	vardcl_list:  vardcl_list ';'.vardcl 
	osemi:  ';'.    (300)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 300 (src line 2048)

	sym  goto 107
	dcl_name  goto 106
	dcl_name_list  goto 105
	vardcl  goto 489
	hidden_importsym  goto 11

state 371
	vardcl:  dcl_name_list ntype '='.expr_list 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 131
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	expr_list  goto 490
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 372
	vardcl:  dcl_name_list '=' expr_list.    (41)
	expr_list:  expr_list.',' expr 

	','  shift 157
	.  reduce 41 (src line 432)


state 373
	dcl_name_list:  dcl_name_list ',' dcl_name.    (288)

	.  reduce 288 (src line 1989)


state 374
	ntype:  '(' ntype.')' 

	')'  shift 491
	.  error


state 375
	recvchantype:  LCOMM LCHAN.ntype 
	recvchantype:  LCOMM LCHAN.implinterfacetype 

	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LBODY  shift 185
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'{'  shift 186
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	lbrace  goto 200
	sym  goto 125
	ntype  goto 422
	dotname  goto 235
	name  goto 202
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	implinterfacetype  goto 492
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 376
	common_dcl:  lconst '(' constdcl osemi.')' 

	')'  shift 493
	.  error


state 377
	common_dcl:  lconst '(' constdcl ';'.constdcl_list osemi ')' 
	osemi:  ';'.    (300)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 300 (src line 2048)

	sym  goto 107
	dcl_name  goto 106
	dcl_name_list  goto 497
	constdcl  goto 496
	constdcl1  goto 495
	constdcl_list  goto 494
	hidden_importsym  goto 11

state 378
	constdcl:  dcl_name_list ntype '='.expr_list 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 131
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	expr_list  goto 498
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 379
	constdcl:  dcl_name_list '=' expr_list.    (43)
	expr_list:  expr_list.',' expr 

	','  shift 157
	.  reduce 43 (src line 442)


state 380
	common_dcl:  LTYPE '(' typedcl_list osemi.')' 

	')'  shift 499
	.  error


state 381
	typedcl_list:  typedcl_list ';'.typedcl 
	osemi:  ';'.    (300)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 300 (src line 2048)

	sym  goto 114
	typedclname  goto 113
	typedcl  goto 500
	hidden_importsym  goto 11

state 382
	implstructtype:  lbrace structdcl_list.osemi '}' 
	structdcl_list:  structdcl_list.';' structdcl 
	osemi: .    (299)

	';'  shift 440
	.  reduce 299 (src line 2047)

	osemi  goto 501

state 383
	implstructtype:  lbrace '}'.    (212)

	.  reduce 212 (src line 1441)


state 384
	fnbody:  '{' stmt_list.'}' 
	stmt_list:  stmt_list.';' stmt 

	';'  shift 432
	'}'  shift 502
	.  error


state 385
	fndcl:  '(' oarg_type_list_ocomma ')'.sym '(' oarg_type_list_ocomma ')' fnres 
	fntype:  LFUNC '(' oarg_type_list_ocomma ')'.fnres 
	fnres: .    (224)

	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 506
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 224 (src line 1622)

	sym  goto 503
	dotname  goto 511
	name  goto 202
	fnres  goto 504
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 510
	recvchantype  goto 507
	othertype  goto 509
	fnret_type  goto 505
	fntype  goto 508
	hidden_importsym  goto 11

state 386
	arg_type_list:  arg_type_list ','.arg_type 
	ocomma:  ','.    (302)

	LCHAN  shift 80
	LDDD  shift 257
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 302 (src line 2051)

	sym  goto 254
	ntype  goto 256
	arg_type  goto 512
	dotname  goto 235
	name  goto 202
	name_or_type  goto 253
	dotdotdot  goto 255
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 387
	oarg_type_list_ocomma:  arg_type_list ocomma.    (262)

	.  reduce 262 (src line 1864)


state 388
	arg_type:  sym name_or_type.    (256)

	.  reduce 256 (src line 1836)


state 389
	arg_type:  sym dotdotdot.    (257)

	.  reduce 257 (src line 1842)


state 390
	dotdotdot:  LDDD ntype.    (171)

	.  reduce 171 (src line 1301)


state 391
	fndcl:  sym '(' oarg_type_list_ocomma.')' fnres 

	')'  shift 513
	.  error


state 392
	non_dcl_stmt:  labelname ':' $$274 stmt.    (275)

	.  reduce 275 (src line 1899)


state 393
	fntype:  LFUNC '(' oarg_type_list_ocomma.')' fnres 

	')'  shift 514
	.  error


state 394
	for_body:  for_header loop_body.    (74)

	.  reduce 74 (src line 720)


state 395
	loop_body:  LBODY.$$66 stmt_list '}' 
	$$66: .    (66)

	.  reduce 66 (src line 667)

	$$66  goto 515

state 396
	for_header:  osimple_stmt ';'.osimple_stmt ';' osimple_stmt 
	osimple_stmt: .    (307)

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 307 (src line 2065)

	sym  goto 125
	expr  goto 49
	fnliteral  goto 75
	name  goto 71
	osimple_stmt  goto 516
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	simple_stmt  goto 289
	uexpr  goto 57
	expr_list  goto 50
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 397
	simple_stmt:  expr_list '='.expr_list 
	range_stmt:  expr_list '='.LRANGE expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LRANGE  shift 517
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 131
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	expr_list  goto 282
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 398
	simple_stmt:  expr_list LCOLAS.expr_list 
	range_stmt:  expr_list LCOLAS.LRANGE expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LRANGE  shift 518
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 131
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	expr_list  goto 283
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 399
	range_stmt:  LRANGE expr.    (70)
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDAND  shift 136
	LANDNOT  shift 151
	LCOMM  shift 154
	LEQ  shift 137
	LGE  shift 141
	LGT  shift 142
	LLE  shift 140
	LLSH  shift 152
	LLT  shift 139
	LNE  shift 138
	LOROR  shift 135
	LRSH  shift 153
	'+'  shift 143
	'-'  shift 144
	'|'  shift 145
	'^'  shift 146
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	.  reduce 70 (src line 692)


state 400
	switch_stmt:  LSWITCH $$89 if_header $$90.LBODY caseblock_list '}' 

	LBODY  shift 519
	.  error


state 401
	if_header:  osimple_stmt ';'.osimple_stmt 
	osimple_stmt: .    (307)

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 307 (src line 2065)

	sym  goto 125
	expr  goto 49
	fnliteral  goto 75
	name  goto 71
	osimple_stmt  goto 520
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	simple_stmt  goto 289
	uexpr  goto 57
	expr_list  goto 50
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 402
	caseblock_list:  caseblock_list.caseblock 
	select_stmt:  LSELECT $$92 LBODY caseblock_list.'}' 

	LCASE  shift 524
	LDEFAULT  shift 525
	'}'  shift 522
	.  error

	case  goto 523
	caseblock  goto 521

state 403
	doselect_stmt:  LDOSELECT $$96 doselect_hdr $$97.LBODY caseblock_list '}' 

	LBODY  shift 526
	.  error


state 404
	doselect_hdr:  osimple_stmt ';'.osimple_stmt ';' osimple_stmt 
	osimple_stmt: .    (307)

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 307 (src line 2065)

	sym  goto 125
	expr  goto 49
	fnliteral  goto 75
	name  goto 71
	osimple_stmt  goto 527
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	simple_stmt  goto 289
	uexpr  goto 57
	expr_list  goto 50
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 405
	if_stmt:  LIF $$79 if_header $$80.loop_body $$81 elseif_list else 

	LBODY  shift 395
	.  error

	loop_body  goto 528

state 406
	pseudocall:  pexpr '(' expr_or_type_list ocomma.')' 

	')'  shift 529
	.  error


state 407
	pseudocall:  pexpr '(' expr_or_type_list LDDD.ocomma ')' 
	ocomma: .    (301)

	','  shift 429
	.  reduce 301 (src line 2050)

	ocomma  goto 530

state 408
	expr_or_type_list:  expr_or_type_list ','.expr_or_type 
	ocomma:  ','.    (302)

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 182
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 181
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 302 (src line 2051)

	sym  goto 125
	expr  goto 176
	expr_or_type  goto 531
	fnliteral  goto 75
	name  goto 71
	non_expr_type  goto 177
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	recvchantype  goto 178
	othertype  goto 180
	fntype  goto 179
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 409
	pexpr_no_paren:  pexpr '.' '(' expr_or_type.')' 

	')'  shift 532
	.  error


state 410
	pexpr_no_paren:  pexpr '.' '(' LTYPE.')' 

	')'  shift 533
	.  error


state 411
	pexpr_no_paren:  pexpr '[' expr ']'.    (137)

	.  reduce 137 (src line 1082)


state 412
	pexpr_no_paren:  pexpr '[' oexpr ':'.oexpr ']' 
	pexpr_no_paren:  pexpr '[' oexpr ':'.oexpr ':' oexpr ']' 
	oexpr: .    (303)

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 303 (src line 2053)

	sym  goto 125
	expr  goto 191
	fnliteral  goto 75
	name  goto 71
	oexpr  goto 534
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 413
	pexpr_no_paren:  pexpr_no_paren '{' start_complit braced_keyval_list.'}' 

	'}'  shift 535
	.  error


state 414
	keyval_list:  keyval_list.',' keyval 
	keyval_list:  keyval_list.',' bare_complitexpr 
	braced_keyval_list:  keyval_list.ocomma 
	ocomma: .    (301)

	','  shift 536
	.  reduce 301 (src line 2050)

	ocomma  goto 537

state 415
	keyval_list:  keyval.    (293)

	.  reduce 293 (src line 2017)


state 416
	keyval_list:  bare_complitexpr.    (294)

	.  reduce 294 (src line 2022)


state 417
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	keyval:  expr.':' complitexpr 
	bare_complitexpr:  expr.    (148)

	LANDAND  shift 136
	LANDNOT  shift 151
	LCOMM  shift 154
	LEQ  shift 137
	LGE  shift 141
	LGT  shift 142
	LLE  shift 140
	LLSH  shift 152
	LLT  shift 139
	LNE  shift 138
	LOROR  shift 135
	LRSH  shift 153
	'+'  shift 143
	'-'  shift 144
	'|'  shift 145
	'^'  shift 146
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	':'  shift 538
	.  reduce 148 (src line 1142)


state 418
	bare_complitexpr:  '{'.start_complit braced_keyval_list '}' 
	start_complit: .    (146)

	.  reduce 146 (src line 1129)

	start_complit  goto 539

state 419
	pexpr_no_paren:  '(' expr_or_type ')' '{'.start_complit braced_keyval_list '}' 
	start_complit: .    (146)

	.  reduce 146 (src line 1129)

	start_complit  goto 540

state 420
	othertype:  LCHAN LCOMM.ntype 
	othertype:  LCHAN LCOMM.implinterfacetype 
	recvchantype:  LCOMM.LCHAN ntype 
	recvchantype:  LCOMM.LCHAN implinterfacetype 

	LCHAN  shift 308
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LBODY  shift 185
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'{'  shift 186
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	lbrace  goto 200
	sym  goto 125
	ntype  goto 320
	dotname  goto 235
	name  goto 202
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	implinterfacetype  goto 321
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 421
	othertype:  LCHAN implinterfacetype.    (201)
	recvchantype:  LCOMM LCHAN implinterfacetype.    (208)

	LBODY  reduce 201 (src line 1384)
	'('  reduce 201 (src line 1384)
	'{'  reduce 201 (src line 1384)
	.  reduce 208 (src line 1413)


state 422
	recvchantype:  LCOMM LCHAN ntype.    (207)

	.  reduce 207 (src line 1407)


state 423
	ntype:  fntype.    (173)
	non_recvchantype:  fntype.    (182)

	LBODY  reduce 182 (src line 1326)
	'('  reduce 182 (src line 1326)
	'{'  reduce 182 (src line 1326)
	.  reduce 173 (src line 1308)


state 424
	ntype:  othertype.    (174)
	non_recvchantype:  othertype.    (183)

	LBODY  reduce 183 (src line 1328)
	'('  reduce 183 (src line 1328)
	'{'  reduce 183 (src line 1328)
	.  reduce 174 (src line 1309)


state 425
	ntype:  ptrtype.    (175)
	non_recvchantype:  ptrtype.    (184)

	LBODY  reduce 184 (src line 1329)
	'('  reduce 184 (src line 1329)
	'{'  reduce 184 (src line 1329)
	.  reduce 175 (src line 1310)


state 426
	ntype:  dotname.    (176)
	non_recvchantype:  dotname.    (185)

	LBODY  reduce 185 (src line 1330)
	'('  reduce 185 (src line 1330)
	'{'  reduce 185 (src line 1330)
	.  reduce 176 (src line 1311)


state 427
	ntype:  '('.ntype ')' 
	non_recvchantype:  '('.ntype ')' 

	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	ntype  goto 541
	dotname  goto 235
	name  goto 202
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 428
	pexpr_no_paren:  convtype '(' expr ocomma.')' 

	')'  shift 542
	.  error


state 429
	ocomma:  ','.    (302)

	.  reduce 302 (src line 2051)


state 430
	pexpr_no_paren:  comptype lbrace start_complit braced_keyval_list.'}' 

	'}'  shift 543
	.  error


state 431
	fnliteral:  fnlitdcl lbrace stmt_list '}'.    (228)

	.  reduce 228 (src line 1643)


state 432
	stmt_list:  stmt_list ';'.stmt 
	stmt: .    (263)

	error  shift 316
	LLITERAL  shift 70
	LBREAK  shift 42
	LCASE  reduce 263 (src line 1872)
	LCHAN  shift 80
	LCONST  shift 48
	LCONTINUE  shift 43
	LDEFAULT  reduce 263 (src line 1872)
	LDEFER  shift 45
	LFALL  shift 41
	LFOR  shift 51
	LFUNC  shift 126
	LGO  shift 44
	LGOTO  shift 46
	LIF  shift 55
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LRETURN  shift 47
	LSELECT  shift 53
	LSTRUCT  shift 84
	LSWITCH  shift 52
	LTYPE  shift 32
	LVAR  shift 30
	LDOSELECT  shift 54
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	';'  reduce 263 (src line 1872)
	'{'  shift 317
	'}'  reduce 263 (src line 1872)
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 58
	stmt  goto 544
	compound_stmt  goto 313
	expr  goto 49
	fnliteral  goto 75
	for_stmt  goto 35
	if_stmt  goto 39
	non_dcl_stmt  goto 315
	labelname  goto 40
	name  goto 71
	new_name  goto 56
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	select_stmt  goto 37
	doselect_stmt  goto 38
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 57
	expr_list  goto 50
	common_dcl  goto 314
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 78

state 433
	compound_stmt:  '{' $$60.stmt_list '}' 
	stmt: .    (263)

	error  shift 316
	LLITERAL  shift 70
	LBREAK  shift 42
	LCHAN  shift 80
	LCONST  shift 48
	LCONTINUE  shift 43
	LDEFER  shift 45
	LFALL  shift 41
	LFOR  shift 51
	LFUNC  shift 126
	LGO  shift 44
	LGOTO  shift 46
	LIF  shift 55
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LRETURN  shift 47
	LSELECT  shift 53
	LSTRUCT  shift 84
	LSWITCH  shift 52
	LTYPE  shift 32
	LVAR  shift 30
	LDOSELECT  shift 54
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	';'  reduce 263 (src line 1872)
	'{'  shift 317
	'}'  reduce 263 (src line 1872)
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 58
	stmt  goto 312
	compound_stmt  goto 313
	expr  goto 49
	fnliteral  goto 75
	for_stmt  goto 35
	if_stmt  goto 39
	non_dcl_stmt  goto 315
	labelname  goto 40
	name  goto 71
	new_name  goto 56
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	select_stmt  goto 37
	doselect_stmt  goto 38
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 57
	expr_list  goto 50
	stmt_list  goto 545
	common_dcl  goto 314
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 78

state 434
	othertype:  '[' oexpr ']' ntype.    (197)

	.  reduce 197 (src line 1364)


state 435
	othertype:  '[' LDDD ']' ntype.    (198)

	.  reduce 198 (src line 1369)


state 436
	non_recvchantype:  '(' ntype ')'.    (186)

	.  reduce 186 (src line 1331)


state 437
	dotname:  name '.' sym.    (196)

	.  reduce 196 (src line 1352)


state 438
	othertype:  LMAP '[' ntype ']'.ntype 

	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	ntype  goto 546
	dotname  goto 235
	name  goto 202
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 439
	structtype:  LSTRUCT lbrace structdcl_list osemi.'}' 

	'}'  shift 547
	.  error


state 440
	structdcl_list:  structdcl_list ';'.structdcl 
	osemi:  ';'.    (300)

	LNAME  shift 336
	'*'  shift 333
	'('  shift 332
	'?'  shift 12
	'@'  shift 13
	.  reduce 300 (src line 2048)

	sym  goto 121
	packname  goto 335
	embed  goto 331
	new_name  goto 334
	new_name_list  goto 330
	structdcl  goto 548
	hidden_importsym  goto 11

state 441
	structdcl:  new_name_list ntype.oliteral 
	oliteral: .    (315)

	LLITERAL  shift 444
	.  reduce 315 (src line 2089)

	oliteral  goto 549

state 442
	new_name_list:  new_name_list ','.new_name 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 121
	new_name  goto 550
	hidden_importsym  goto 11

state 443
	structdcl:  embed oliteral.    (243)

	.  reduce 243 (src line 1742)


state 444
	oliteral:  LLITERAL.    (316)

	.  reduce 316 (src line 2093)


state 445
	structdcl:  '(' embed.')' oliteral 

	')'  shift 551
	.  error


state 446
	structdcl:  '(' '*'.embed ')' oliteral 

	LNAME  shift 447
	.  error

	packname  goto 335
	embed  goto 552

state 447
	packname:  LNAME.    (248)
	packname:  LNAME.'.' sym 

	'.'  shift 450
	.  reduce 248 (src line 1774)


state 448
	structdcl:  '*' embed.oliteral 
	oliteral: .    (315)

	LLITERAL  shift 444
	.  reduce 315 (src line 2089)

	oliteral  goto 553

state 449
	structdcl:  '*' '('.embed ')' oliteral 

	LNAME  shift 447
	.  error

	packname  goto 335
	embed  goto 554

state 450
	packname:  LNAME '.'.sym 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 555
	hidden_importsym  goto 11

state 451
	interfacetype:  LINTERFACE lbrace interfacedcl_list osemi.'}' 

	'}'  shift 556
	.  error


state 452
	interfacedcl_list:  interfacedcl_list ';'.interfacedcl 
	osemi:  ';'.    (300)

	LNAME  shift 336
	'('  shift 342
	'?'  shift 12
	'@'  shift 13
	.  reduce 300 (src line 2048)

	sym  goto 121
	packname  goto 341
	interfacedcl  goto 557
	new_name  goto 340
	hidden_importsym  goto 11

state 453
	interfacedcl:  new_name indcl.    (251)

	.  reduce 251 (src line 1805)


state 454
	indcl:  '('.oarg_type_list_ocomma ')' fnres 
	oarg_type_list_ocomma: .    (261)

	LCHAN  shift 80
	LDDD  shift 257
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 261 (src line 1860)

	sym  goto 254
	ntype  goto 256
	arg_type  goto 252
	dotname  goto 235
	name  goto 202
	name_or_type  goto 253
	oarg_type_list_ocomma  goto 558
	arg_type_list  goto 251
	dotdotdot  goto 255
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 455
	interfacedcl:  '(' packname.')' 

	')'  shift 559
	.  error


state 456
	import:  LIMPORT '(' import_stmt_list osemi ')'.    (9)

	.  reduce 9 (src line 233)


state 457
	import_stmt_list:  import_stmt_list ';' import_stmt.    (14)

	.  reduce 14 (src line 285)


state 458
	hidden_import:  LIMPORT LNAME LLITERAL ';'.    (317)

	.  reduce 317 (src line 2098)


state 459
	hidden_import:  LVAR hidden_pkg_importsym hidden_type ';'.    (318)

	.  reduce 318 (src line 2103)


state 460
	hidden_type_misc:  '[' ']'.hidden_type 

	LCHAN  shift 358
	LFUNC  shift 360
	LINTERFACE  shift 356
	LMAP  shift 354
	LNAME  shift 352
	LSTRUCT  shift 355
	LCOMM  shift 359
	'*'  shift 357
	'['  shift 353
	'@'  shift 13
	.  error

	hidden_importsym  goto 351
	hidden_type  goto 560
	hidden_type_misc  goto 348
	hidden_type_func  goto 350
	hidden_type_recv_chan  goto 349

state 461
	hidden_type_misc:  '[' LLITERAL.']' hidden_type 

	']'  shift 561
	.  error


state 462
	hidden_type_misc:  LMAP '['.hidden_type ']' hidden_type 

	LCHAN  shift 358
	LFUNC  shift 360
	LINTERFACE  shift 356
	LMAP  shift 354
	LNAME  shift 352
	LSTRUCT  shift 355
	LCOMM  shift 359
	'*'  shift 357
	'['  shift 353
	'@'  shift 13
	.  error

	hidden_importsym  goto 351
	hidden_type  goto 562
	hidden_type_misc  goto 348
	hidden_type_func  goto 350
	hidden_type_recv_chan  goto 349

state 463
	hidden_type_misc:  LSTRUCT '{'.ohidden_structdcl_list '}' 
	ohidden_structdcl_list: .    (311)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 311 (src line 2077)

	sym  goto 566
	hidden_importsym  goto 11
	hidden_structdcl  goto 565
	hidden_structdcl_list  goto 564
	ohidden_structdcl_list  goto 563

state 464
	hidden_type_misc:  LINTERFACE '{'.ohidden_interfacedcl_list '}' 
	ohidden_interfacedcl_list: .    (313)

	LCHAN  shift 358
	LFUNC  shift 360
	LINTERFACE  shift 356
	LMAP  shift 354
	LNAME  shift 572
	LSTRUCT  shift 355
	LCOMM  shift 359
	'*'  shift 357
	'['  shift 353
	'?'  shift 12
	'@'  shift 13
	.  reduce 313 (src line 2083)

	sym  goto 570
	hidden_importsym  goto 573
	hidden_interfacedcl  goto 569
	hidden_interfacedcl_list  goto 568
	ohidden_interfacedcl_list  goto 567
	hidden_type  goto 571
	hidden_type_misc  goto 348
	hidden_type_func  goto 350
	hidden_type_recv_chan  goto 349

state 465
	hidden_type_misc:  '*' hidden_type.    (337)

	.  reduce 337 (src line 2202)


state 466
	hidden_type_misc:  LCHAN hidden_type_non_recv_chan.    (338)

	.  reduce 338 (src line 2206)


state 467
	hidden_type_misc:  LCHAN '('.hidden_type_recv_chan ')' 

	LCOMM  shift 359
	.  error

	hidden_type_recv_chan  goto 574

state 468
	hidden_type_misc:  LCHAN LCOMM.hidden_type 

	LCHAN  shift 358
	LFUNC  shift 360
	LINTERFACE  shift 356
	LMAP  shift 354
	LNAME  shift 352
	LSTRUCT  shift 355
	LCOMM  shift 359
	'*'  shift 357
	'['  shift 353
	'@'  shift 13
	.  error

	hidden_importsym  goto 351
	hidden_type  goto 575
	hidden_type_misc  goto 348
	hidden_type_func  goto 350
	hidden_type_recv_chan  goto 349

state 469
	hidden_type_non_recv_chan:  hidden_type_misc.    (328)

	.  reduce 328 (src line 2162)


state 470
	hidden_type_non_recv_chan:  hidden_type_func.    (329)

	.  reduce 329 (src line 2164)


state 471
	hidden_type_recv_chan:  LCOMM LCHAN.hidden_type 

	LCHAN  shift 358
	LFUNC  shift 360
	LINTERFACE  shift 356
	LMAP  shift 354
	LNAME  shift 352
	LSTRUCT  shift 355
	LCOMM  shift 359
	'*'  shift 357
	'['  shift 353
	'@'  shift 13
	.  error

	hidden_importsym  goto 351
	hidden_type  goto 576
	hidden_type_misc  goto 348
	hidden_type_func  goto 350
	hidden_type_recv_chan  goto 349

state 472
	hidden_type_func:  LFUNC '('.ohidden_funarg_list ')' ohidden_funres 
	ohidden_funarg_list: .    (309)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 309 (src line 2071)

	sym  goto 368
	hidden_importsym  goto 11
	hidden_funarg  goto 367
	hidden_funarg_list  goto 483
	ohidden_funarg_list  goto 577

state 473
	hidden_import:  LCONST hidden_pkg_importsym '=' hidden_constant.';' 

	';'  shift 578
	.  error


state 474
	hidden_constant:  hidden_literal.    (355)

	.  reduce 355 (src line 2349)


state 475
	hidden_constant:  '('.hidden_literal '+' hidden_literal ')' 

	LLITERAL  shift 476
	LNAME  shift 10
	'-'  shift 477
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 478
	hidden_importsym  goto 11
	hidden_literal  goto 579

state 476
	hidden_literal:  LLITERAL.    (352)

	.  reduce 352 (src line 2318)


state 477
	hidden_literal:  '-'.LLITERAL 

	LLITERAL  shift 580
	.  error


state 478
	hidden_literal:  sym.    (354)

	.  reduce 354 (src line 2341)


state 479
	hidden_import:  LCONST hidden_pkg_importsym hidden_type '='.hidden_constant ';' 

	LLITERAL  shift 476
	LNAME  shift 10
	'-'  shift 477
	'('  shift 475
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 478
	hidden_importsym  goto 11
	hidden_constant  goto 581
	hidden_literal  goto 474

state 480
	hidden_import:  LTYPE hidden_pkgtype hidden_type ';'.    (321)

	.  reduce 321 (src line 2115)


state 481
	hidden_import:  LFUNC hidden_fndcl fnbody ';'.    (322)

	.  reduce 322 (src line 2119)


state 482
	hidden_fndcl:  hidden_pkg_importsym '(' ohidden_funarg_list.')' ohidden_funres 

	')'  shift 582
	.  error


state 483
	ohidden_funarg_list:  hidden_funarg_list.    (310)
	hidden_funarg_list:  hidden_funarg_list.',' hidden_funarg 

	','  shift 485
	.  reduce 310 (src line 2075)


state 484
	hidden_fndcl:  '(' hidden_funarg_list ')'.sym '(' ohidden_funarg_list ')' ohidden_funres 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 583
	hidden_importsym  goto 11

state 485
	hidden_funarg_list:  hidden_funarg_list ','.hidden_funarg 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 368
	hidden_importsym  goto 11
	hidden_funarg  goto 584

state 486
	hidden_funarg:  sym hidden_type.oliteral 
	oliteral: .    (315)

	LLITERAL  shift 444
	.  reduce 315 (src line 2089)

	oliteral  goto 585

state 487
	hidden_funarg:  sym LDDD.hidden_type oliteral 

	LCHAN  shift 358
	LFUNC  shift 360
	LINTERFACE  shift 356
	LMAP  shift 354
	LNAME  shift 352
	LSTRUCT  shift 355
	LCOMM  shift 359
	'*'  shift 357
	'['  shift 353
	'@'  shift 13
	.  error

	hidden_importsym  goto 351
	hidden_type  goto 586
	hidden_type_misc  goto 348
	hidden_type_func  goto 350
	hidden_type_recv_chan  goto 349

state 488
	common_dcl:  LVAR '(' vardcl_list osemi ')'.    (29)

	.  reduce 29 (src line 373)


state 489
	vardcl_list:  vardcl_list ';' vardcl.    (233)

	.  reduce 233 (src line 1678)


state 490
	vardcl:  dcl_name_list ntype '=' expr_list.    (40)
	expr_list:  expr_list.',' expr 

	','  shift 157
	.  reduce 40 (src line 428)


state 491
	ntype:  '(' ntype ')'.    (177)

	.  reduce 177 (src line 1312)


state 492
	recvchantype:  LCOMM LCHAN implinterfacetype.    (208)

	.  reduce 208 (src line 1413)


state 493
	common_dcl:  lconst '(' constdcl osemi ')'.    (32)

	.  reduce 32 (src line 387)


state 494
	common_dcl:  lconst '(' constdcl ';' constdcl_list.osemi ')' 
	constdcl_list:  constdcl_list.';' constdcl1 
	osemi: .    (299)

	';'  shift 588
	.  reduce 299 (src line 2047)

	osemi  goto 587

state 495
	constdcl_list:  constdcl1.    (234)

	.  reduce 234 (src line 1683)


state 496
	constdcl1:  constdcl.    (44)

	.  reduce 44 (src line 447)


state 497
	constdcl:  dcl_name_list.ntype '=' expr_list 
	constdcl:  dcl_name_list.'=' expr_list 
	constdcl1:  dcl_name_list.ntype 
	constdcl1:  dcl_name_list.    (46)
	dcl_name_list:  dcl_name_list.',' dcl_name 

	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'='  shift 241
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	','  shift 230
	.  reduce 46 (src line 453)

	sym  goto 125
	ntype  goto 589
	dotname  goto 235
	name  goto 202
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 498
	constdcl:  dcl_name_list ntype '=' expr_list.    (42)
	expr_list:  expr_list.',' expr 

	','  shift 157
	.  reduce 42 (src line 437)


state 499
	common_dcl:  LTYPE '(' typedcl_list osemi ')'.    (36)

	.  reduce 36 (src line 408)


state 500
	typedcl_list:  typedcl_list ';' typedcl.    (237)

	.  reduce 237 (src line 1695)


state 501
	implstructtype:  lbrace structdcl_list osemi.'}' 

	'}'  shift 590
	.  error


state 502
	fnbody:  '{' stmt_list '}'.    (223)

	.  reduce 223 (src line 1614)


state 503
	name:  sym.    (168)
	fndcl:  '(' oarg_type_list_ocomma ')' sym.'(' oarg_type_list_ocomma ')' fnres 

	'('  shift 591
	.  reduce 168 (src line 1274)


state 504
	fntype:  LFUNC '(' oarg_type_list_ocomma ')' fnres.    (221)

	.  reduce 221 (src line 1601)


state 505
	fnres:  fnret_type.    (225)

	.  reduce 225 (src line 1627)


state 506
	fnres:  '('.oarg_type_list_ocomma ')' 
	oarg_type_list_ocomma: .    (261)

	LCHAN  shift 80
	LDDD  shift 257
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 261 (src line 1860)

	sym  goto 254
	ntype  goto 256
	arg_type  goto 252
	dotname  goto 235
	name  goto 202
	name_or_type  goto 253
	oarg_type_list_ocomma  goto 592
	arg_type_list  goto 251
	dotdotdot  goto 255
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 507
	fnret_type:  recvchantype.    (190)

	.  reduce 190 (src line 1343)


state 508
	fnret_type:  fntype.    (191)

	.  reduce 191 (src line 1345)


state 509
	fnret_type:  othertype.    (192)

	.  reduce 192 (src line 1346)


state 510
	fnret_type:  ptrtype.    (193)

	.  reduce 193 (src line 1347)


state 511
	fnret_type:  dotname.    (194)

	.  reduce 194 (src line 1348)


state 512
	arg_type_list:  arg_type_list ',' arg_type.    (260)

	.  reduce 260 (src line 1855)


state 513
	fndcl:  sym '(' oarg_type_list_ocomma ')'.fnres 
	fnres: .    (224)

	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 506
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 224 (src line 1622)

	sym  goto 125
	dotname  goto 511
	name  goto 202
	fnres  goto 593
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 510
	recvchantype  goto 507
	othertype  goto 509
	fnret_type  goto 505
	fntype  goto 508
	hidden_importsym  goto 11

state 514
	fntype:  LFUNC '(' oarg_type_list_ocomma ')'.fnres 
	fnres: .    (224)

	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 506
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 224 (src line 1622)

	sym  goto 125
	dotname  goto 511
	name  goto 202
	fnres  goto 504
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 510
	recvchantype  goto 507
	othertype  goto 509
	fnret_type  goto 505
	fntype  goto 508
	hidden_importsym  goto 11

state 515
	loop_body:  LBODY $$66.stmt_list '}' 
	stmt: .    (263)

	error  shift 316
	LLITERAL  shift 70
	LBREAK  shift 42
	LCHAN  shift 80
	LCONST  shift 48
	LCONTINUE  shift 43
	LDEFER  shift 45
	LFALL  shift 41
	LFOR  shift 51
	LFUNC  shift 126
	LGO  shift 44
	LGOTO  shift 46
	LIF  shift 55
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LRETURN  shift 47
	LSELECT  shift 53
	LSTRUCT  shift 84
	LSWITCH  shift 52
	LTYPE  shift 32
	LVAR  shift 30
	LDOSELECT  shift 54
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	';'  reduce 263 (src line 1872)
	'{'  shift 317
	'}'  reduce 263 (src line 1872)
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 58
	stmt  goto 312
	compound_stmt  goto 313
	expr  goto 49
	fnliteral  goto 75
	for_stmt  goto 35
	if_stmt  goto 39
	non_dcl_stmt  goto 315
	labelname  goto 40
	name  goto 71
	new_name  goto 56
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	select_stmt  goto 37
	doselect_stmt  goto 38
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 57
	expr_list  goto 50
	stmt_list  goto 594
	common_dcl  goto 314
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 78

state 516
	for_header:  osimple_stmt ';' osimple_stmt.';' osimple_stmt 

	';'  shift 595
	.  error


state 517
	range_stmt:  expr_list '=' LRANGE.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 596
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 518
	range_stmt:  expr_list LCOLAS LRANGE.expr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 597
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 519
	switch_stmt:  LSWITCH $$89 if_header $$90 LBODY.caseblock_list '}' 
	caseblock_list: .    (64)

	.  reduce 64 (src line 658)

	caseblock_list  goto 598

state 520
	if_header:  osimple_stmt ';' osimple_stmt.    (78)

	.  reduce 78 (src line 745)


state 521
	caseblock_list:  caseblock_list caseblock.    (65)

	.  reduce 65 (src line 662)


state 522
	select_stmt:  LSELECT $$92 LBODY caseblock_list '}'.    (93)

	.  reduce 93 (src line 850)


state 523
	caseblock:  case.$$62 stmt_list 
	$$62: .    (62)

	.  reduce 62 (src line 627)

	$$62  goto 599

state 524
	case:  LCASE.expr_or_type_list ':' 
	case:  LCASE.expr_or_type_list '=' expr ':' 
	case:  LCASE.expr_or_type_list LCOLAS expr ':' 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 182
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 181
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 176
	expr_or_type  goto 300
	fnliteral  goto 75
	name  goto 71
	non_expr_type  goto 177
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	expr_or_type_list  goto 600
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	recvchantype  goto 178
	othertype  goto 180
	fntype  goto 179
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 525
	case:  LDEFAULT.':' 

	':'  shift 601
	.  error


state 526
	doselect_stmt:  LDOSELECT $$96 doselect_hdr $$97 LBODY.caseblock_list '}' 
	caseblock_list: .    (64)

	.  reduce 64 (src line 658)

	caseblock_list  goto 602

state 527
	doselect_hdr:  osimple_stmt ';' osimple_stmt.';' osimple_stmt 

	';'  shift 603
	.  error


state 528
	if_stmt:  LIF $$79 if_header $$80 loop_body.$$81 elseif_list else 
	$$81: .    (81)

	.  reduce 81 (src line 767)

	$$81  goto 604

state 529
	pseudocall:  pexpr '(' expr_or_type_list ocomma ')'.    (130)

	.  reduce 130 (src line 1045)


state 530
	pseudocall:  pexpr '(' expr_or_type_list LDDD ocomma.')' 

	')'  shift 605
	.  error


state 531
	expr_or_type_list:  expr_or_type_list ',' expr_or_type.    (292)

	.  reduce 292 (src line 2009)


state 532
	pexpr_no_paren:  pexpr '.' '(' expr_or_type ')'.    (135)

	.  reduce 135 (src line 1074)


state 533
	pexpr_no_paren:  pexpr '.' '(' LTYPE ')'.    (136)

	.  reduce 136 (src line 1078)


state 534
	pexpr_no_paren:  pexpr '[' oexpr ':' oexpr.']' 
	pexpr_no_paren:  pexpr '[' oexpr ':' oexpr.':' oexpr ']' 

	':'  shift 607
	']'  shift 606
	.  error


state 535
	pexpr_no_paren:  pexpr_no_paren '{' start_complit braced_keyval_list '}'.    (143)

	.  reduce 143 (src line 1114)


state 536
	keyval_list:  keyval_list ','.keyval 
	keyval_list:  keyval_list ','.bare_complitexpr 
	ocomma:  ','.    (302)

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'{'  shift 418
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 302 (src line 2051)

	sym  goto 125
	expr  goto 417
	bare_complitexpr  goto 609
	fnliteral  goto 75
	keyval  goto 608
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 537
	braced_keyval_list:  keyval_list ocomma.    (298)

	.  reduce 298 (src line 2039)


state 538
	keyval:  expr ':'.complitexpr 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'{'  shift 612
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 611
	complitexpr  goto 610
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 539
	bare_complitexpr:  '{' start_complit.braced_keyval_list '}' 
	braced_keyval_list: .    (297)

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'{'  shift 418
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 297 (src line 2035)

	sym  goto 125
	expr  goto 417
	bare_complitexpr  goto 416
	fnliteral  goto 75
	keyval  goto 415
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	keyval_list  goto 414
	braced_keyval_list  goto 613
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 540
	pexpr_no_paren:  '(' expr_or_type ')' '{' start_complit.braced_keyval_list '}' 
	braced_keyval_list: .    (297)

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'{'  shift 418
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 297 (src line 2035)

	sym  goto 125
	expr  goto 417
	bare_complitexpr  goto 416
	fnliteral  goto 75
	keyval  goto 415
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	keyval_list  goto 414
	braced_keyval_list  goto 614
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 541
	ntype:  '(' ntype.')' 
	non_recvchantype:  '(' ntype.')' 

	')'  shift 615
	.  error


state 542
	pexpr_no_paren:  convtype '(' expr ocomma ')'.    (141)

	.  reduce 141 (src line 1101)


state 543
	pexpr_no_paren:  comptype lbrace start_complit braced_keyval_list '}'.    (142)

	.  reduce 142 (src line 1107)


state 544
	stmt_list:  stmt_list ';' stmt.    (284)

	.  reduce 284 (src line 1966)


state 545
	compound_stmt:  '{' $$60 stmt_list.'}' 
	stmt_list:  stmt_list.';' stmt 

	';'  shift 432
	'}'  shift 616
	.  error


state 546
	othertype:  LMAP '[' ntype ']' ntype.    (203)

	.  reduce 203 (src line 1394)


state 547
	structtype:  LSTRUCT lbrace structdcl_list osemi '}'.    (209)

	.  reduce 209 (src line 1421)


state 548
	structdcl_list:  structdcl_list ';' structdcl.    (239)

	.  reduce 239 (src line 1702)


state 549
	structdcl:  new_name_list ntype oliteral.    (242)

	.  reduce 242 (src line 1717)


state 550
	new_name_list:  new_name_list ',' new_name.    (286)

	.  reduce 286 (src line 1979)


state 551
	structdcl:  '(' embed ')'.oliteral 
	oliteral: .    (315)

	LLITERAL  shift 444
	.  reduce 315 (src line 2089)

	oliteral  goto 617

state 552
	structdcl:  '(' '*' embed.')' oliteral 

	')'  shift 618
	.  error


state 553
	structdcl:  '*' embed oliteral.    (245)

	.  reduce 245 (src line 1753)


state 554
	structdcl:  '*' '(' embed.')' oliteral 

	')'  shift 619
	.  error


state 555
	packname:  LNAME '.' sym.    (249)

	.  reduce 249 (src line 1785)


state 556
	interfacetype:  LINTERFACE lbrace interfacedcl_list osemi '}'.    (213)

	.  reduce 213 (src line 1447)


state 557
	interfacedcl_list:  interfacedcl_list ';' interfacedcl.    (241)

	.  reduce 241 (src line 1712)


state 558
	indcl:  '(' oarg_type_list_ocomma.')' fnres 

	')'  shift 620
	.  error


state 559
	interfacedcl:  '(' packname ')'.    (253)

	.  reduce 253 (src line 1815)


state 560
	hidden_type_misc:  '[' ']' hidden_type.    (332)

	.  reduce 332 (src line 2182)


state 561
	hidden_type_misc:  '[' LLITERAL ']'.hidden_type 

	LCHAN  shift 358
	LFUNC  shift 360
	LINTERFACE  shift 356
	LMAP  shift 354
	LNAME  shift 352
	LSTRUCT  shift 355
	LCOMM  shift 359
	'*'  shift 357
	'['  shift 353
	'@'  shift 13
	.  error

	hidden_importsym  goto 351
	hidden_type  goto 621
	hidden_type_misc  goto 348
	hidden_type_func  goto 350
	hidden_type_recv_chan  goto 349

state 562
	hidden_type_misc:  LMAP '[' hidden_type.']' hidden_type 

	']'  shift 622
	.  error


state 563
	hidden_type_misc:  LSTRUCT '{' ohidden_structdcl_list.'}' 

	'}'  shift 623
	.  error


state 564
	ohidden_structdcl_list:  hidden_structdcl_list.    (312)
	hidden_structdcl_list:  hidden_structdcl_list.';' hidden_structdcl 

	';'  shift 624
	.  reduce 312 (src line 2081)


state 565
	hidden_structdcl_list:  hidden_structdcl.    (361)

	.  reduce 361 (src line 2376)


state 566
	hidden_structdcl:  sym.hidden_type oliteral 

	LCHAN  shift 358
	LFUNC  shift 360
	LINTERFACE  shift 356
	LMAP  shift 354
	LNAME  shift 352
	LSTRUCT  shift 355
	LCOMM  shift 359
	'*'  shift 357
	'['  shift 353
	'@'  shift 13
	.  error

	hidden_importsym  goto 351
	hidden_type  goto 625
	hidden_type_misc  goto 348
	hidden_type_func  goto 350
	hidden_type_recv_chan  goto 349

state 567
	hidden_type_misc:  LINTERFACE '{' ohidden_interfacedcl_list.'}' 

	'}'  shift 626
	.  error


state 568
	ohidden_interfacedcl_list:  hidden_interfacedcl_list.    (314)
	hidden_interfacedcl_list:  hidden_interfacedcl_list.';' hidden_interfacedcl 

	';'  shift 627
	.  reduce 314 (src line 2087)


state 569
	hidden_interfacedcl_list:  hidden_interfacedcl.    (363)

	.  reduce 363 (src line 2386)


state 570
	hidden_interfacedcl:  sym.'(' ohidden_funarg_list ')' ohidden_funres 

	'('  shift 628
	.  error


state 571
	hidden_interfacedcl:  hidden_type.    (347)

	.  reduce 347 (src line 2293)


state 572
	sym:  LNAME.    (163)
	hidden_type_misc:  LNAME.    (331)

	'('  reduce 163 (src line 1229)
	.  reduce 331 (src line 2171)


state 573
	sym:  hidden_importsym.    (164)
	hidden_type_misc:  hidden_importsym.    (330)

	'('  reduce 164 (src line 1238)
	.  reduce 330 (src line 2166)


state 574
	hidden_type_misc:  LCHAN '(' hidden_type_recv_chan.')' 

	')'  shift 629
	.  error


state 575
	hidden_type_misc:  LCHAN LCOMM hidden_type.    (340)

	.  reduce 340 (src line 2218)


state 576
	hidden_type_recv_chan:  LCOMM LCHAN hidden_type.    (341)

	.  reduce 341 (src line 2225)


state 577
	hidden_type_func:  LFUNC '(' ohidden_funarg_list.')' ohidden_funres 

	')'  shift 630
	.  error


state 578
	hidden_import:  LCONST hidden_pkg_importsym '=' hidden_constant ';'.    (319)

	.  reduce 319 (src line 2107)


state 579
	hidden_constant:  '(' hidden_literal.'+' hidden_literal ')' 

	'+'  shift 631
	.  error


state 580
	hidden_literal:  '-' LLITERAL.    (353)

	.  reduce 353 (src line 2323)


state 581
	hidden_import:  LCONST hidden_pkg_importsym hidden_type '=' hidden_constant.';' 

	';'  shift 632
	.  error


state 582
	hidden_fndcl:  hidden_pkg_importsym '(' ohidden_funarg_list ')'.ohidden_funres 
	ohidden_funres: .    (348)

	LCHAN  shift 358
	LFUNC  shift 360
	LINTERFACE  shift 356
	LMAP  shift 354
	LNAME  shift 352
	LSTRUCT  shift 355
	LCOMM  shift 359
	'*'  shift 357
	'('  shift 635
	'['  shift 353
	'@'  shift 13
	.  reduce 348 (src line 2298)

	hidden_importsym  goto 351
	hidden_funres  goto 634
	ohidden_funres  goto 633
	hidden_type  goto 636
	hidden_type_misc  goto 348
	hidden_type_func  goto 350
	hidden_type_recv_chan  goto 349

state 583
	hidden_fndcl:  '(' hidden_funarg_list ')' sym.'(' ohidden_funarg_list ')' ohidden_funres 

	'('  shift 637
	.  error


state 584
	hidden_funarg_list:  hidden_funarg_list ',' hidden_funarg.    (360)

	.  reduce 360 (src line 2371)


state 585
	hidden_funarg:  sym hidden_type oliteral.    (343)

	.  reduce 343 (src line 2239)


state 586
	hidden_funarg:  sym LDDD hidden_type.oliteral 
	oliteral: .    (315)

	LLITERAL  shift 444
	.  reduce 315 (src line 2089)

	oliteral  goto 638

state 587
	common_dcl:  lconst '(' constdcl ';' constdcl_list osemi.')' 

	')'  shift 639
	.  error


state 588
	constdcl_list:  constdcl_list ';'.constdcl1 
	osemi:  ';'.    (300)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 300 (src line 2048)

	sym  goto 107
	dcl_name  goto 106
	dcl_name_list  goto 497
	constdcl  goto 496
	constdcl1  goto 640
	hidden_importsym  goto 11

state 589
	constdcl:  dcl_name_list ntype.'=' expr_list 
	constdcl1:  dcl_name_list ntype.    (45)

	'='  shift 378
	.  reduce 45 (src line 449)


state 590
	implstructtype:  lbrace structdcl_list osemi '}'.    (211)

	.  reduce 211 (src line 1434)


state 591
	fndcl:  '(' oarg_type_list_ocomma ')' sym '('.oarg_type_list_ocomma ')' fnres 
	oarg_type_list_ocomma: .    (261)

	LCHAN  shift 80
	LDDD  shift 257
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 236
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 261 (src line 1860)

	sym  goto 254
	ntype  goto 256
	arg_type  goto 252
	dotname  goto 235
	name  goto 202
	name_or_type  goto 253
	oarg_type_list_ocomma  goto 641
	arg_type_list  goto 251
	dotdotdot  goto 255
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 234
	recvchantype  goto 231
	othertype  goto 233
	fntype  goto 232
	hidden_importsym  goto 11

state 592
	fnres:  '(' oarg_type_list_ocomma.')' 

	')'  shift 642
	.  error


state 593
	fndcl:  sym '(' oarg_type_list_ocomma ')' fnres.    (217)

	.  reduce 217 (src line 1489)


state 594
	loop_body:  LBODY $$66 stmt_list.'}' 
	stmt_list:  stmt_list.';' stmt 

	';'  shift 432
	'}'  shift 643
	.  error


state 595
	for_header:  osimple_stmt ';' osimple_stmt ';'.osimple_stmt 
	osimple_stmt: .    (307)

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 307 (src line 2065)

	sym  goto 125
	expr  goto 49
	fnliteral  goto 75
	name  goto 71
	osimple_stmt  goto 644
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	simple_stmt  goto 289
	uexpr  goto 57
	expr_list  goto 50
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 596
	range_stmt:  expr_list '=' LRANGE expr.    (68)
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDAND  shift 136
	LANDNOT  shift 151
	LCOMM  shift 154
	LEQ  shift 137
	LGE  shift 141
	LGT  shift 142
	LLE  shift 140
	LLSH  shift 152
	LLT  shift 139
	LNE  shift 138
	LOROR  shift 135
	LRSH  shift 153
	'+'  shift 143
	'-'  shift 144
	'|'  shift 145
	'^'  shift 146
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	.  reduce 68 (src line 678)


state 597
	range_stmt:  expr_list LCOLAS LRANGE expr.    (69)
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDAND  shift 136
	LANDNOT  shift 151
	LCOMM  shift 154
	LEQ  shift 137
	LGE  shift 141
	LGT  shift 142
	LLE  shift 140
	LLSH  shift 152
	LLT  shift 139
	LNE  shift 138
	LOROR  shift 135
	LRSH  shift 153
	'+'  shift 143
	'-'  shift 144
	'|'  shift 145
	'^'  shift 146
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	.  reduce 69 (src line 685)


state 598
	caseblock_list:  caseblock_list.caseblock 
	switch_stmt:  LSWITCH $$89 if_header $$90 LBODY caseblock_list.'}' 

	LCASE  shift 524
	LDEFAULT  shift 525
	'}'  shift 645
	.  error

	case  goto 523
	caseblock  goto 521

state 599
	caseblock:  case $$62.stmt_list 
	stmt: .    (263)

	error  shift 316
	LLITERAL  shift 70
	LBREAK  shift 42
	LCASE  reduce 263 (src line 1872)
	LCHAN  shift 80
	LCONST  shift 48
	LCONTINUE  shift 43
	LDEFAULT  reduce 263 (src line 1872)
	LDEFER  shift 45
	LFALL  shift 41
	LFOR  shift 51
	LFUNC  shift 126
	LGO  shift 44
	LGOTO  shift 46
	LIF  shift 55
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LRETURN  shift 47
	LSELECT  shift 53
	LSTRUCT  shift 84
	LSWITCH  shift 52
	LTYPE  shift 32
	LVAR  shift 30
	LDOSELECT  shift 54
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	';'  reduce 263 (src line 1872)
	'{'  shift 317
	'}'  reduce 263 (src line 1872)
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 58
	stmt  goto 312
	compound_stmt  goto 313
	expr  goto 49
	fnliteral  goto 75
	for_stmt  goto 35
	if_stmt  goto 39
	non_dcl_stmt  goto 315
	labelname  goto 40
	name  goto 71
	new_name  goto 56
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	select_stmt  goto 37
	doselect_stmt  goto 38
	simple_stmt  goto 34
	switch_stmt  goto 36
	uexpr  goto 57
	expr_list  goto 50
	stmt_list  goto 646
	common_dcl  goto 314
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	lconst  goto 31
	fnlitdcl  goto 78

state 600
	case:  LCASE expr_or_type_list.':' 
	case:  LCASE expr_or_type_list.'=' expr ':' 
	case:  LCASE expr_or_type_list.LCOLAS expr ':' 
	expr_or_type_list:  expr_or_type_list.',' expr_or_type 

	LCOLAS  shift 649
	'='  shift 648
	':'  shift 647
	','  shift 650
	.  error


state 601
	case:  LDEFAULT ':'.    (59)

	.  reduce 59 (src line 592)


state 602
	caseblock_list:  caseblock_list.caseblock 
	doselect_stmt:  LDOSELECT $$96 doselect_hdr $$97 LBODY caseblock_list.'}' 

	LCASE  shift 524
	LDEFAULT  shift 525
	'}'  shift 651
	.  error

	case  goto 523
	caseblock  goto 521

state 603
	doselect_hdr:  osimple_stmt ';' osimple_stmt ';'.osimple_stmt 
	osimple_stmt: .    (307)

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 307 (src line 2065)

	sym  goto 125
	expr  goto 49
	fnliteral  goto 75
	name  goto 71
	osimple_stmt  goto 652
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	simple_stmt  goto 289
	uexpr  goto 57
	expr_list  goto 50
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 604
	if_stmt:  LIF $$79 if_header $$80 loop_body $$81.elseif_list else 
	elseif_list: .    (85)

	.  reduce 85 (src line 802)

	elseif_list  goto 653

state 605
	pseudocall:  pexpr '(' expr_or_type_list LDDD ocomma ')'.    (131)

	.  reduce 131 (src line 1050)


state 606
	pexpr_no_paren:  pexpr '[' oexpr ':' oexpr ']'.    (138)

	.  reduce 138 (src line 1086)


state 607
	pexpr_no_paren:  pexpr '[' oexpr ':' oexpr ':'.oexpr ']' 
	oexpr: .    (303)

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 303 (src line 2053)

	sym  goto 125
	expr  goto 191
	fnliteral  goto 75
	name  goto 71
	oexpr  goto 654
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 608
	keyval_list:  keyval_list ',' keyval.    (295)

	.  reduce 295 (src line 2026)


state 609
	keyval_list:  keyval_list ',' bare_complitexpr.    (296)

	.  reduce 296 (src line 2030)


state 610
	keyval:  expr ':' complitexpr.    (147)

	.  reduce 147 (src line 1136)


state 611
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 
	complitexpr:  expr.    (150)

	LANDAND  shift 136
	LANDNOT  shift 151
	LCOMM  shift 154
	LEQ  shift 137
	LGE  shift 141
	LGT  shift 142
	LLE  shift 140
	LLSH  shift 152
	LLT  shift 139
	LNE  shift 138
	LOROR  shift 135
	LRSH  shift 153
	'+'  shift 143
	'-'  shift 144
	'|'  shift 145
	'^'  shift 146
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	.  reduce 150 (src line 1162)


state 612
	complitexpr:  '{'.start_complit braced_keyval_list '}' 
	start_complit: .    (146)

	.  reduce 146 (src line 1129)

	start_complit  goto 655

state 613
	bare_complitexpr:  '{' start_complit braced_keyval_list.'}' 

	'}'  shift 656
	.  error


state 614
	pexpr_no_paren:  '(' expr_or_type ')' '{' start_complit braced_keyval_list.'}' 

	'}'  shift 657
	.  error


state 615
	ntype:  '(' ntype ')'.    (177)
	non_recvchantype:  '(' ntype ')'.    (186)

	LBODY  reduce 186 (src line 1331)
	'('  reduce 186 (src line 1331)
	'{'  reduce 186 (src line 1331)
	.  reduce 177 (src line 1312)


state 616
	compound_stmt:  '{' $$60 stmt_list '}'.    (61)

	.  reduce 61 (src line 617)


state 617
	structdcl:  '(' embed ')' oliteral.    (244)

	.  reduce 244 (src line 1747)


state 618
	structdcl:  '(' '*' embed ')'.oliteral 
	oliteral: .    (315)

	LLITERAL  shift 444
	.  reduce 315 (src line 2089)

	oliteral  goto 658

state 619
	structdcl:  '*' '(' embed ')'.oliteral 
	oliteral: .    (315)

	LLITERAL  shift 444
	.  reduce 315 (src line 2089)

	oliteral  goto 659

state 620
	indcl:  '(' oarg_type_list_ocomma ')'.fnres 
	fnres: .    (224)

	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 506
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 224 (src line 1622)

	sym  goto 125
	dotname  goto 511
	name  goto 202
	fnres  goto 660
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 510
	recvchantype  goto 507
	othertype  goto 509
	fnret_type  goto 505
	fntype  goto 508
	hidden_importsym  goto 11

state 621
	hidden_type_misc:  '[' LLITERAL ']' hidden_type.    (333)

	.  reduce 333 (src line 2186)


state 622
	hidden_type_misc:  LMAP '[' hidden_type ']'.hidden_type 

	LCHAN  shift 358
	LFUNC  shift 360
	LINTERFACE  shift 356
	LMAP  shift 354
	LNAME  shift 352
	LSTRUCT  shift 355
	LCOMM  shift 359
	'*'  shift 357
	'['  shift 353
	'@'  shift 13
	.  error

	hidden_importsym  goto 351
	hidden_type  goto 661
	hidden_type_misc  goto 348
	hidden_type_func  goto 350
	hidden_type_recv_chan  goto 349

state 623
	hidden_type_misc:  LSTRUCT '{' ohidden_structdcl_list '}'.    (335)

	.  reduce 335 (src line 2194)


state 624
	hidden_structdcl_list:  hidden_structdcl_list ';'.hidden_structdcl 

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 566
	hidden_importsym  goto 11
	hidden_structdcl  goto 662

state 625
	hidden_structdcl:  sym hidden_type.oliteral 
	oliteral: .    (315)

	LLITERAL  shift 444
	.  reduce 315 (src line 2089)

	oliteral  goto 663

state 626
	hidden_type_misc:  LINTERFACE '{' ohidden_interfacedcl_list '}'.    (336)

	.  reduce 336 (src line 2198)


state 627
	hidden_interfacedcl_list:  hidden_interfacedcl_list ';'.hidden_interfacedcl 

	LCHAN  shift 358
	LFUNC  shift 360
	LINTERFACE  shift 356
	LMAP  shift 354
	LNAME  shift 572
	LSTRUCT  shift 355
	LCOMM  shift 359
	'*'  shift 357
	'['  shift 353
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 570
	hidden_importsym  goto 573
	hidden_interfacedcl  goto 664
	hidden_type  goto 571
	hidden_type_misc  goto 348
	hidden_type_func  goto 350
	hidden_type_recv_chan  goto 349

state 628
	hidden_interfacedcl:  sym '('.ohidden_funarg_list ')' ohidden_funres 
	ohidden_funarg_list: .    (309)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 309 (src line 2071)

	sym  goto 368
	hidden_importsym  goto 11
	hidden_funarg  goto 367
	hidden_funarg_list  goto 483
	ohidden_funarg_list  goto 665

state 629
	hidden_type_misc:  LCHAN '(' hidden_type_recv_chan ')'.    (339)

	.  reduce 339 (src line 2212)


state 630
	hidden_type_func:  LFUNC '(' ohidden_funarg_list ')'.ohidden_funres 
	ohidden_funres: .    (348)

	LCHAN  shift 358
	LFUNC  shift 360
	LINTERFACE  shift 356
	LMAP  shift 354
	LNAME  shift 352
	LSTRUCT  shift 355
	LCOMM  shift 359
	'*'  shift 357
	'('  shift 635
	'['  shift 353
	'@'  shift 13
	.  reduce 348 (src line 2298)

	hidden_importsym  goto 351
	hidden_funres  goto 634
	ohidden_funres  goto 666
	hidden_type  goto 636
	hidden_type_misc  goto 348
	hidden_type_func  goto 350
	hidden_type_recv_chan  goto 349

state 631
	hidden_constant:  '(' hidden_literal '+'.hidden_literal ')' 

	LLITERAL  shift 476
	LNAME  shift 10
	'-'  shift 477
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 478
	hidden_importsym  goto 11
	hidden_literal  goto 667

state 632
	hidden_import:  LCONST hidden_pkg_importsym hidden_type '=' hidden_constant ';'.    (320)

	.  reduce 320 (src line 2111)


state 633
	hidden_fndcl:  hidden_pkg_importsym '(' ohidden_funarg_list ')' ohidden_funres.    (219)

	.  reduce 219 (src line 1558)


state 634
	ohidden_funres:  hidden_funres.    (349)

	.  reduce 349 (src line 2302)


state 635
	hidden_funres:  '('.ohidden_funarg_list ')' 
	ohidden_funarg_list: .    (309)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 309 (src line 2071)

	sym  goto 368
	hidden_importsym  goto 11
	hidden_funarg  goto 367
	hidden_funarg_list  goto 483
	ohidden_funarg_list  goto 668

state 636
	hidden_funres:  hidden_type.    (351)

	.  reduce 351 (src line 2309)


state 637
	hidden_fndcl:  '(' hidden_funarg_list ')' sym '('.ohidden_funarg_list ')' ohidden_funres 
	ohidden_funarg_list: .    (309)

	LNAME  shift 10
	'?'  shift 12
	'@'  shift 13
	.  reduce 309 (src line 2071)

	sym  goto 368
	hidden_importsym  goto 11
	hidden_funarg  goto 367
	hidden_funarg_list  goto 483
	ohidden_funarg_list  goto 669

state 638
	hidden_funarg:  sym LDDD hidden_type oliteral.    (344)

	.  reduce 344 (src line 2248)


state 639
	common_dcl:  lconst '(' constdcl ';' constdcl_list osemi ')'.    (33)

	.  reduce 33 (src line 393)


state 640
	constdcl_list:  constdcl_list ';' constdcl1.    (235)

	.  reduce 235 (src line 1685)


state 641
	fndcl:  '(' oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma.')' fnres 

	')'  shift 670
	.  error


state 642
	fnres:  '(' oarg_type_list_ocomma ')'.    (226)

	.  reduce 226 (src line 1631)


state 643
	loop_body:  LBODY $$66 stmt_list '}'.    (67)

	.  reduce 67 (src line 672)


state 644
	for_header:  osimple_stmt ';' osimple_stmt ';' osimple_stmt.    (71)

	.  reduce 71 (src line 698)


state 645
	switch_stmt:  LSWITCH $$89 if_header $$90 LBODY caseblock_list '}'.    (91)

	.  reduce 91 (src line 836)


state 646
	caseblock:  case $$62 stmt_list.    (63)
	stmt_list:  stmt_list.';' stmt 

	';'  shift 432
	.  reduce 63 (src line 639)


state 647
	case:  LCASE expr_or_type_list ':'.    (56)

	.  reduce 56 (src line 541)


state 648
	case:  LCASE expr_or_type_list '='.expr ':' 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 671
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 649
	case:  LCASE expr_or_type_list LCOLAS.expr ':' 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 672
	fnliteral  goto 75
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 650
	expr_or_type_list:  expr_or_type_list ','.expr_or_type 

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 182
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 181
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  error

	sym  goto 125
	expr  goto 176
	expr_or_type  goto 531
	fnliteral  goto 75
	name  goto 71
	non_expr_type  goto 177
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	recvchantype  goto 178
	othertype  goto 180
	fntype  goto 179
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 651
	doselect_stmt:  LDOSELECT $$96 doselect_hdr $$97 LBODY caseblock_list '}'.    (98)

	.  reduce 98 (src line 892)


state 652
	doselect_hdr:  osimple_stmt ';' osimple_stmt ';' osimple_stmt.    (94)

	.  reduce 94 (src line 858)


state 653
	if_stmt:  LIF $$79 if_header $$80 loop_body $$81 elseif_list.else 
	elseif_list:  elseif_list.elseif 
	else: .    (87)

	LELSE  shift 675
	.  reduce 87 (src line 811)

	elseif  goto 674
	else  goto 673

state 654
	pexpr_no_paren:  pexpr '[' oexpr ':' oexpr ':' oexpr.']' 

	']'  shift 676
	.  error


state 655
	complitexpr:  '{' start_complit.braced_keyval_list '}' 
	braced_keyval_list: .    (297)

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'{'  shift 418
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 297 (src line 2035)

	sym  goto 125
	expr  goto 417
	bare_complitexpr  goto 416
	fnliteral  goto 75
	keyval  goto 415
	name  goto 71
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	uexpr  goto 57
	keyval_list  goto 414
	braced_keyval_list  goto 677
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 656
	bare_complitexpr:  '{' start_complit braced_keyval_list '}'.    (149)

	.  reduce 149 (src line 1156)


state 657
	pexpr_no_paren:  '(' expr_or_type ')' '{' start_complit braced_keyval_list '}'.    (144)

	.  reduce 144 (src line 1120)


state 658
	structdcl:  '(' '*' embed ')' oliteral.    (246)

	.  reduce 246 (src line 1759)


state 659
	structdcl:  '*' '(' embed ')' oliteral.    (247)

	.  reduce 247 (src line 1766)


state 660
	indcl:  '(' oarg_type_list_ocomma ')' fnres.    (254)

	.  reduce 254 (src line 1821)


state 661
	hidden_type_misc:  LMAP '[' hidden_type ']' hidden_type.    (334)

	.  reduce 334 (src line 2190)


state 662
	hidden_structdcl_list:  hidden_structdcl_list ';' hidden_structdcl.    (362)

	.  reduce 362 (src line 2381)


state 663
	hidden_structdcl:  sym hidden_type oliteral.    (345)

	.  reduce 345 (src line 2264)


state 664
	hidden_interfacedcl_list:  hidden_interfacedcl_list ';' hidden_interfacedcl.    (364)

	.  reduce 364 (src line 2391)


state 665
	hidden_interfacedcl:  sym '(' ohidden_funarg_list.')' ohidden_funres 

	')'  shift 678
	.  error


state 666
	hidden_type_func:  LFUNC '(' ohidden_funarg_list ')' ohidden_funres.    (342)

	.  reduce 342 (src line 2233)


state 667
	hidden_constant:  '(' hidden_literal '+' hidden_literal.')' 

	')'  shift 679
	.  error


state 668
	hidden_funres:  '(' ohidden_funarg_list.')' 

	')'  shift 680
	.  error


state 669
	hidden_fndcl:  '(' hidden_funarg_list ')' sym '(' ohidden_funarg_list.')' ohidden_funres 

	')'  shift 681
	.  error


state 670
	fndcl:  '(' oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma ')'.fnres 
	fnres: .    (224)

	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 237
	'*'  shift 201
	'('  shift 506
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 224 (src line 1622)

	sym  goto 125
	dotname  goto 511
	name  goto 202
	fnres  goto 682
	interfacetype  goto 83
	structtype  goto 82
	ptrtype  goto 510
	recvchantype  goto 507
	othertype  goto 509
	fnret_type  goto 505
	fntype  goto 508
	hidden_importsym  goto 11

state 671
	case:  LCASE expr_or_type_list '=' expr.':' 
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDAND  shift 136
	LANDNOT  shift 151
	LCOMM  shift 154
	LEQ  shift 137
	LGE  shift 141
	LGT  shift 142
	LLE  shift 140
	LLSH  shift 152
	LLT  shift 139
	LNE  shift 138
	LOROR  shift 135
	LRSH  shift 153
	'+'  shift 143
	'-'  shift 144
	'|'  shift 145
	'^'  shift 146
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	':'  shift 683
	.  error


state 672
	case:  LCASE expr_or_type_list LCOLAS expr.':' 
	expr:  expr.LOROR expr 
	expr:  expr.LANDAND expr 
	expr:  expr.LEQ expr 
	expr:  expr.LNE expr 
	expr:  expr.LLT expr 
	expr:  expr.LLE expr 
	expr:  expr.LGE expr 
	expr:  expr.LGT expr 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'|' expr 
	expr:  expr.'^' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr.'%' expr 
	expr:  expr.'&' expr 
	expr:  expr.LANDNOT expr 
	expr:  expr.LLSH expr 
	expr:  expr.LRSH expr 
	expr:  expr.LCOMM expr 

	LANDAND  shift 136
	LANDNOT  shift 151
	LCOMM  shift 154
	LEQ  shift 137
	LGE  shift 141
	LGT  shift 142
	LLE  shift 140
	LLSH  shift 152
	LLT  shift 139
	LNE  shift 138
	LOROR  shift 135
	LRSH  shift 153
	'+'  shift 143
	'-'  shift 144
	'|'  shift 145
	'^'  shift 146
	'*'  shift 147
	'/'  shift 148
	'%'  shift 149
	'&'  shift 150
	':'  shift 684
	.  error


state 673
	if_stmt:  LIF $$79 if_header $$80 loop_body $$81 elseif_list else.    (82)

	.  reduce 82 (src line 771)


state 674
	elseif_list:  elseif_list elseif.    (86)

	.  reduce 86 (src line 806)


state 675
	elseif:  LELSE.LIF $$83 if_header loop_body 
	else:  LELSE.compound_stmt 

	LIF  shift 685
	'{'  shift 317
	.  error

	compound_stmt  goto 686

state 676
	pexpr_no_paren:  pexpr '[' oexpr ':' oexpr ':' oexpr ']'.    (139)

	.  reduce 139 (src line 1090)


state 677
	complitexpr:  '{' start_complit braced_keyval_list.'}' 

	'}'  shift 687
	.  error


state 678
	hidden_interfacedcl:  sym '(' ohidden_funarg_list ')'.ohidden_funres 
	ohidden_funres: .    (348)

	LCHAN  shift 358
	LFUNC  shift 360
	LINTERFACE  shift 356
	LMAP  shift 354
	LNAME  shift 352
	LSTRUCT  shift 355
	LCOMM  shift 359
	'*'  shift 357
	'('  shift 635
	'['  shift 353
	'@'  shift 13
	.  reduce 348 (src line 2298)

	hidden_importsym  goto 351
	hidden_funres  goto 634
	ohidden_funres  goto 688
	hidden_type  goto 636
	hidden_type_misc  goto 348
	hidden_type_func  goto 350
	hidden_type_recv_chan  goto 349

state 679
	hidden_constant:  '(' hidden_literal '+' hidden_literal ')'.    (356)

	.  reduce 356 (src line 2351)


state 680
	hidden_funres:  '(' ohidden_funarg_list ')'.    (350)

	.  reduce 350 (src line 2304)


state 681
	hidden_fndcl:  '(' hidden_funarg_list ')' sym '(' ohidden_funarg_list ')'.ohidden_funres 
	ohidden_funres: .    (348)

	LCHAN  shift 358
	LFUNC  shift 360
	LINTERFACE  shift 356
	LMAP  shift 354
	LNAME  shift 352
	LSTRUCT  shift 355
	LCOMM  shift 359
	'*'  shift 357
	'('  shift 635
	'['  shift 353
	'@'  shift 13
	.  reduce 348 (src line 2298)

	hidden_importsym  goto 351
	hidden_funres  goto 634
	ohidden_funres  goto 689
	hidden_type  goto 636
	hidden_type_misc  goto 348
	hidden_type_func  goto 350
	hidden_type_recv_chan  goto 349

state 682
	fndcl:  '(' oarg_type_list_ocomma ')' sym '(' oarg_type_list_ocomma ')' fnres.    (218)

	.  reduce 218 (src line 1521)


state 683
	case:  LCASE expr_or_type_list '=' expr ':'.    (57)

	.  reduce 57 (src line 565)


state 684
	case:  LCASE expr_or_type_list LCOLAS expr ':'.    (58)

	.  reduce 58 (src line 583)


state 685
	elseif:  LELSE LIF.$$83 if_header loop_body 
	$$83: .    (83)

	.  reduce 83 (src line 788)

	$$83  goto 690

state 686
	else:  LELSE compound_stmt.    (88)

	.  reduce 88 (src line 815)


state 687
	complitexpr:  '{' start_complit braced_keyval_list '}'.    (151)

	.  reduce 151 (src line 1164)


state 688
	hidden_interfacedcl:  sym '(' ohidden_funarg_list ')' ohidden_funres.    (346)

	.  reduce 346 (src line 2288)


state 689
	hidden_fndcl:  '(' hidden_funarg_list ')' sym '(' ohidden_funarg_list ')' ohidden_funres.    (220)

	.  reduce 220 (src line 1584)


state 690
	elseif:  LELSE LIF $$83.if_header loop_body 
	osimple_stmt: .    (307)

	LLITERAL  shift 70
	LCHAN  shift 80
	LFUNC  shift 126
	LINTERFACE  shift 85
	LMAP  shift 81
	LNAME  shift 10
	LSTRUCT  shift 84
	LCOMM  shift 67
	'+'  shift 62
	'-'  shift 63
	'^'  shift 66
	'*'  shift 60
	'&'  shift 61
	'('  shift 69
	'!'  shift 64
	'~'  shift 65
	'['  shift 79
	'?'  shift 12
	'@'  shift 13
	.  reduce 307 (src line 2065)

	sym  goto 125
	expr  goto 49
	fnliteral  goto 75
	if_header  goto 691
	name  goto 71
	osimple_stmt  goto 293
	pexpr  goto 59
	pexpr_no_paren  goto 68
	pseudocall  goto 72
	simple_stmt  goto 289
	uexpr  goto 57
	expr_list  goto 50
	convtype  goto 73
	comptype  goto 74
	interfacetype  goto 83
	structtype  goto 82
	othertype  goto 77
	fntype  goto 76
	hidden_importsym  goto 11
	fnlitdcl  goto 78

state 691
	elseif:  LELSE LIF $$83 if_header.loop_body 

	LBODY  shift 395
	.  error

	loop_body  goto 692

state 692
	elseif:  LELSE LIF $$83 if_header loop_body.    (84)

	.  reduce 84 (src line 793)


77 terminals, 148 nonterminals
365 grammar rules, 693/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
197 working sets used
memory: parser 3905/30000
470 extra closures
3185 shift entries, 67 exceptions
623 goto entries
1722 entries saved by goto default
Optimizer space used: output 2409/30000
2409 table entries, 793 zero
maximum spread: 77, maximum offset: 691
